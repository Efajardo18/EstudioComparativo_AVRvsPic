

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Thu Sep 29 20:58:40 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	intentry,global,class=CODE,delta=2
    12                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    13                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    14                           	dabs	1,0x7E,2
    15  0000                     
    16                           ; Version 2.40
    17                           ; Generated 17/11/2021 GMT
    18                           ; 
    19                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution. Publication is not required when
    33                           ;        this file is used in an embedded application.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC16F887 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     	;# 
    52  0001                     	;# 
    53  0002                     	;# 
    54  0003                     	;# 
    55  0004                     	;# 
    56  0005                     	;# 
    57  0006                     	;# 
    58  0007                     	;# 
    59  0008                     	;# 
    60  0009                     	;# 
    61  000A                     	;# 
    62  000B                     	;# 
    63  000C                     	;# 
    64  000D                     	;# 
    65  000E                     	;# 
    66  000E                     	;# 
    67  000F                     	;# 
    68  0010                     	;# 
    69  0011                     	;# 
    70  0012                     	;# 
    71  0013                     	;# 
    72  0014                     	;# 
    73  0015                     	;# 
    74  0015                     	;# 
    75  0016                     	;# 
    76  0017                     	;# 
    77  0018                     	;# 
    78  0019                     	;# 
    79  001A                     	;# 
    80  001B                     	;# 
    81  001B                     	;# 
    82  001C                     	;# 
    83  001D                     	;# 
    84  001E                     	;# 
    85  001F                     	;# 
    86  0081                     	;# 
    87  0085                     	;# 
    88  0086                     	;# 
    89  0087                     	;# 
    90  0088                     	;# 
    91  0089                     	;# 
    92  008C                     	;# 
    93  008D                     	;# 
    94  008E                     	;# 
    95  008F                     	;# 
    96  0090                     	;# 
    97  0091                     	;# 
    98  0092                     	;# 
    99  0093                     	;# 
   100  0093                     	;# 
   101  0093                     	;# 
   102  0094                     	;# 
   103  0095                     	;# 
   104  0096                     	;# 
   105  0097                     	;# 
   106  0098                     	;# 
   107  0099                     	;# 
   108  009A                     	;# 
   109  009B                     	;# 
   110  009C                     	;# 
   111  009D                     	;# 
   112  009E                     	;# 
   113  009F                     	;# 
   114  0105                     	;# 
   115  0107                     	;# 
   116  0108                     	;# 
   117  0109                     	;# 
   118  010C                     	;# 
   119  010C                     	;# 
   120  010D                     	;# 
   121  010E                     	;# 
   122  010F                     	;# 
   123  0185                     	;# 
   124  0187                     	;# 
   125  0188                     	;# 
   126  0189                     	;# 
   127  018C                     	;# 
   128  018D                     	;# 
   129  0000                     	;# 
   130  0001                     	;# 
   131  0002                     	;# 
   132  0003                     	;# 
   133  0004                     	;# 
   134  0005                     	;# 
   135  0006                     	;# 
   136  0007                     	;# 
   137  0008                     	;# 
   138  0009                     	;# 
   139  000A                     	;# 
   140  000B                     	;# 
   141  000C                     	;# 
   142  000D                     	;# 
   143  000E                     	;# 
   144  000E                     	;# 
   145  000F                     	;# 
   146  0010                     	;# 
   147  0011                     	;# 
   148  0012                     	;# 
   149  0013                     	;# 
   150  0014                     	;# 
   151  0015                     	;# 
   152  0015                     	;# 
   153  0016                     	;# 
   154  0017                     	;# 
   155  0018                     	;# 
   156  0019                     	;# 
   157  001A                     	;# 
   158  001B                     	;# 
   159  001B                     	;# 
   160  001C                     	;# 
   161  001D                     	;# 
   162  001E                     	;# 
   163  001F                     	;# 
   164  0081                     	;# 
   165  0085                     	;# 
   166  0086                     	;# 
   167  0087                     	;# 
   168  0088                     	;# 
   169  0089                     	;# 
   170  008C                     	;# 
   171  008D                     	;# 
   172  008E                     	;# 
   173  008F                     	;# 
   174  0090                     	;# 
   175  0091                     	;# 
   176  0092                     	;# 
   177  0093                     	;# 
   178  0093                     	;# 
   179  0093                     	;# 
   180  0094                     	;# 
   181  0095                     	;# 
   182  0096                     	;# 
   183  0097                     	;# 
   184  0098                     	;# 
   185  0099                     	;# 
   186  009A                     	;# 
   187  009B                     	;# 
   188  009C                     	;# 
   189  009D                     	;# 
   190  009E                     	;# 
   191  009F                     	;# 
   192  0105                     	;# 
   193  0107                     	;# 
   194  0108                     	;# 
   195  0109                     	;# 
   196  010C                     	;# 
   197  010C                     	;# 
   198  010D                     	;# 
   199  010E                     	;# 
   200  010F                     	;# 
   201  0185                     	;# 
   202  0187                     	;# 
   203  0188                     	;# 
   204  0189                     	;# 
   205  018C                     	;# 
   206  018D                     	;# 
   207  001E                     _ADRESH	set	30
   208  000C                     _PIR1bits	set	12
   209  0007                     _PORTCbits	set	7
   210  0008                     _PORTD	set	8
   211  0007                     _PORTC	set	7
   212  0006                     _PORTB	set	6
   213  0005                     _PORTA	set	5
   214  001F                     _ADCON0	set	31
   215  000B                     _INTCON	set	11
   216  001F                     _ADCON0bits	set	31
   217  009F                     _ADCON1	set	159
   218  008C                     _PIE1	set	140
   219  0088                     _TRISD	set	136
   220  0087                     _TRISC	set	135
   221  0086                     _TRISB	set	134
   222  0085                     _TRISA	set	133
   223  008F                     _OSCCON	set	143
   224  0189                     _ANSELH	set	393
   225  0188                     _ANSEL	set	392
   226                           
   227                           	psect	cinit
   228  000F                     start_initialization:	
   229                           ; #config settings
   230                           
   231  000F                     __initialization:
   232                           
   233                           ; Clear objects allocated to COMMON
   234  000F  01F3               	clrf	__pbssCOMMON& (0+127)
   235  0010                     end_of_initialization:	
   236                           ;End of C runtime variable initialization code
   237                           
   238  0010                     __end_of__initialization:
   239  0010  0183               	clrf	3
   240  0011  120A  118A  287D   	ljmp	_main	;jump to C main() function
   241                           
   242                           	psect	bssCOMMON
   243  0073                     __pbssCOMMON:
   244  0073                     _VADC:
   245  0073                     	ds	1
   246                           
   247                           	psect	cstackCOMMON
   248  0070                     __pcstackCOMMON:
   249  0070                     ?_setup:
   250  0070                     ?_GOCHK:	
   251                           ; 1 bytes @ 0x0
   252                           
   253  0070                     ?_main:	
   254                           ; 1 bytes @ 0x0
   255                           
   256  0070                     ?_ISR:	
   257                           ; 1 bytes @ 0x0
   258                           
   259  0070                     ??_ISR:	
   260                           ; 1 bytes @ 0x0
   261                           
   262                           
   263                           ; 1 bytes @ 0x0
   264  0070                     	ds	3
   265  0073                     ??_setup:
   266  0073                     ??_GOCHK:	
   267                           ; 1 bytes @ 0x3
   268                           
   269  0073                     ??_main:	
   270                           ; 1 bytes @ 0x3
   271                           
   272                           
   273                           	psect	maintext
   274  007D                     __pmaintext:	
   275                           ; 1 bytes @ 0x3
   276 ;;
   277 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   278 ;;
   279 ;; *************** function _main *****************
   280 ;; Defined at:
   281 ;;		line 41 in file "main.c"
   282 ;; Parameters:    Size  Location     Type
   283 ;;		None
   284 ;; Auto vars:     Size  Location     Type
   285 ;;		None
   286 ;; Return value:  Size  Location     Type
   287 ;;                  1    wreg      void 
   288 ;; Registers used:
   289 ;;		wreg, status,2, status,0, pclath, cstack
   290 ;; Tracked objects:
   291 ;;		On entry : B00/0
   292 ;;		On exit  : 0/0
   293 ;;		Unchanged: 0/0
   294 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   295 ;;      Params:         0       0       0       0       0
   296 ;;      Locals:         0       0       0       0       0
   297 ;;      Temps:          0       0       0       0       0
   298 ;;      Totals:         0       0       0       0       0
   299 ;;Total ram usage:        0 bytes
   300 ;; Hardware stack levels required when called: 2
   301 ;; This function calls:
   302 ;;		_GOCHK
   303 ;;		_setup
   304 ;; This function is called by:
   305 ;;		Startup code after reset
   306 ;; This function uses a non-reentrant model
   307 ;;
   308                           
   309  007D                     _main:	
   310                           ;psect for function _main
   311                           
   312  007D                     l681:	
   313                           ;incstack = 0
   314                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   315                           
   316                           
   317                           ;main.c: 42:     setup();
   318  007D  120A  118A  205A  120A  118A  	fcall	_setup
   319  0082                     l683:
   320                           
   321                           ;main.c: 44:         GOCHK();
   322  0082  120A  118A  208B  120A  118A  	fcall	_GOCHK
   323  0087  2882               	goto	l683
   324  0088  120A  118A  280C   	ljmp	start
   325  008B                     __end_of_main:
   326                           
   327                           	psect	text1
   328  005A                     __ptext1:	
   329 ;; *************** function _setup *****************
   330 ;; Defined at:
   331 ;;		line 49 in file "main.c"
   332 ;; Parameters:    Size  Location     Type
   333 ;;		None
   334 ;; Auto vars:     Size  Location     Type
   335 ;;		None
   336 ;; Return value:  Size  Location     Type
   337 ;;                  1    wreg      void 
   338 ;; Registers used:
   339 ;;		wreg, status,2
   340 ;; Tracked objects:
   341 ;;		On entry : 0/0
   342 ;;		On exit  : 0/0
   343 ;;		Unchanged: 0/0
   344 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   345 ;;      Params:         0       0       0       0       0
   346 ;;      Locals:         0       0       0       0       0
   347 ;;      Temps:          0       0       0       0       0
   348 ;;      Totals:         0       0       0       0       0
   349 ;;Total ram usage:        0 bytes
   350 ;; Hardware stack levels used: 1
   351 ;; Hardware stack levels required when called: 1
   352 ;; This function calls:
   353 ;;		Nothing
   354 ;; This function is called by:
   355 ;;		_main
   356 ;; This function uses a non-reentrant model
   357 ;;
   358                           
   359  005A                     _setup:	
   360                           ;psect for function _setup
   361                           
   362  005A                     l661:	
   363                           ;incstack = 0
   364                           ; Regs used in _setup: [wreg+status,2]
   365                           
   366                           
   367                           ;main.c: 50:     OSCCON = 0b01111000;
   368  005A  3078               	movlw	120
   369  005B  1683               	bsf	3,5	;RP0=1, select bank1
   370  005C  1303               	bcf	3,6	;RP1=0, select bank1
   371  005D  008F               	movwf	15	;volatile
   372  005E                     l663:
   373                           
   374                           ;main.c: 51:     TRISA = 0b00000000;
   375  005E  0185               	clrf	5	;volatile
   376  005F                     l665:
   377                           
   378                           ;main.c: 52:     TRISB = 0b00100001;
   379  005F  3021               	movlw	33
   380  0060  0086               	movwf	6	;volatile
   381                           
   382                           ;main.c: 53:     TRISC = 0b00000000;
   383  0061  0187               	clrf	7	;volatile
   384                           
   385                           ;main.c: 54:     TRISD = 0b00000000;
   386  0062  0188               	clrf	8	;volatile
   387                           
   388                           ;main.c: 55:     ANSEL = 0b00000000;
   389  0063  1683               	bsf	3,5	;RP0=1, select bank3
   390  0064  1703               	bsf	3,6	;RP1=1, select bank3
   391  0065  0188               	clrf	8	;volatile
   392  0066                     l667:
   393                           
   394                           ;main.c: 56:     ANSELH = 0b00110000;
   395  0066  3030               	movlw	48
   396  0067  0089               	movwf	9	;volatile
   397  0068                     l669:
   398                           
   399                           ;main.c: 57:     INTCON = 0b11000000;
   400  0068  30C0               	movlw	192
   401  0069  008B               	movwf	11	;volatile
   402  006A                     l671:
   403                           
   404                           ;main.c: 58:     PIE1 = 0b01000000;
   405  006A  3040               	movlw	64
   406  006B  1683               	bsf	3,5	;RP0=1, select bank1
   407  006C  1303               	bcf	3,6	;RP1=0, select bank1
   408  006D  008C               	movwf	12	;volatile
   409  006E                     l673:
   410                           
   411                           ;main.c: 59:     ADCON0 = 0b10110001;
   412  006E  30B1               	movlw	177
   413  006F  1283               	bcf	3,5	;RP0=0, select bank0
   414  0070  1303               	bcf	3,6	;RP1=0, select bank0
   415  0071  009F               	movwf	31	;volatile
   416                           
   417                           ;main.c: 60:     ADCON1 = 0b00000000;
   418  0072  1683               	bsf	3,5	;RP0=1, select bank1
   419  0073  1303               	bcf	3,6	;RP1=0, select bank1
   420  0074  019F               	clrf	31	;volatile
   421                           
   422                           ;main.c: 61:     PORTA = 0;
   423  0075  1283               	bcf	3,5	;RP0=0, select bank0
   424  0076  1303               	bcf	3,6	;RP1=0, select bank0
   425  0077  0185               	clrf	5	;volatile
   426                           
   427                           ;main.c: 62:     PORTB = 0;
   428  0078  0186               	clrf	6	;volatile
   429  0079                     l675:
   430                           
   431                           ;main.c: 63:     PORTC = 0b10000000;
   432  0079  3080               	movlw	128
   433  007A  0087               	movwf	7	;volatile
   434  007B                     l677:
   435                           
   436                           ;main.c: 64:     PORTD = 0;
   437  007B  0188               	clrf	8	;volatile
   438  007C                     l57:
   439  007C  0008               	return
   440  007D                     __end_of_setup:
   441                           
   442                           	psect	text2
   443  008B                     __ptext2:	
   444 ;; *************** function _GOCHK *****************
   445 ;; Defined at:
   446 ;;		line 5 in file "./ADClib.h"
   447 ;; Parameters:    Size  Location     Type
   448 ;;		None
   449 ;; Auto vars:     Size  Location     Type
   450 ;;		None
   451 ;; Return value:  Size  Location     Type
   452 ;;                  1    wreg      void 
   453 ;; Registers used:
   454 ;;		None
   455 ;; Tracked objects:
   456 ;;		On entry : 0/0
   457 ;;		On exit  : 0/0
   458 ;;		Unchanged: 0/0
   459 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   460 ;;      Params:         0       0       0       0       0
   461 ;;      Locals:         0       0       0       0       0
   462 ;;      Temps:          0       0       0       0       0
   463 ;;      Totals:         0       0       0       0       0
   464 ;;Total ram usage:        0 bytes
   465 ;; Hardware stack levels used: 1
   466 ;; Hardware stack levels required when called: 1
   467 ;; This function calls:
   468 ;;		Nothing
   469 ;; This function is called by:
   470 ;;		_main
   471 ;; This function uses a non-reentrant model
   472 ;;
   473                           
   474  008B                     _GOCHK:	
   475                           ;psect for function _GOCHK
   476                           
   477  008B                     l657:	
   478                           ;incstack = 0
   479                           ; Regs used in _GOCHK: []
   480                           
   481                           
   482                           ;./ADClib.h: 6:     if(ADCON0bits.GO==0){
   483  008B  1283               	bcf	3,5	;RP0=0, select bank0
   484  008C  1303               	bcf	3,6	;RP1=0, select bank0
   485  008D  189F               	btfsc	31,1	;volatile
   486  008E  2890               	goto	u11
   487  008F  2891               	goto	u10
   488  0090                     u11:
   489  0090  2892               	goto	l44
   490  0091                     u10:
   491  0091                     l659:
   492                           
   493                           ;./ADClib.h: 7:             ADCON0bits.GO=1;
   494  0091  149F               	bsf	31,1	;volatile
   495  0092                     l44:
   496  0092  0008               	return
   497  0093                     __end_of_GOCHK:
   498                           
   499                           	psect	text3
   500  0014                     __ptext3:	
   501 ;; *************** function _ISR *****************
   502 ;; Defined at:
   503 ;;		line 68 in file "main.c"
   504 ;; Parameters:    Size  Location     Type
   505 ;;		None
   506 ;; Auto vars:     Size  Location     Type
   507 ;;		None
   508 ;; Return value:  Size  Location     Type
   509 ;;                  1    wreg      void 
   510 ;; Registers used:
   511 ;;		wreg, status,2, status,0
   512 ;; Tracked objects:
   513 ;;		On entry : 0/0
   514 ;;		On exit  : 0/0
   515 ;;		Unchanged: 0/0
   516 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   517 ;;      Params:         0       0       0       0       0
   518 ;;      Locals:         0       0       0       0       0
   519 ;;      Temps:          3       0       0       0       0
   520 ;;      Totals:         3       0       0       0       0
   521 ;;Total ram usage:        3 bytes
   522 ;; Hardware stack levels used: 1
   523 ;; This function calls:
   524 ;;		Nothing
   525 ;; This function is called by:
   526 ;;		Interrupt level 1
   527 ;; This function uses a non-reentrant model
   528 ;;
   529                           
   530  0014                     _ISR:	
   531                           ;psect for function _ISR
   532                           
   533  0014                     i1l685:
   534                           
   535                           ;main.c: 69:     PORTCbits.RC7 ^= 1;
   536  0014  1283               	bcf	3,5	;RP0=0, select bank0
   537  0015  1303               	bcf	3,6	;RP1=0, select bank0
   538  0016  0D07               	rlf	7,w	;volatile
   539  0017  0D07               	rlf	7,w	;volatile
   540  0018  3901               	andlw	1
   541  0019  00F0               	movwf	??_ISR
   542  001A  3001               	movlw	1
   543  001B  06F0               	xorwf	??_ISR,f
   544  001C  0CF0               	rrf	??_ISR,f
   545  001D  0CF0               	rrf	??_ISR,f
   546  001E  0807               	movf	7,w	;volatile
   547  001F  0670               	xorwf	??_ISR,w
   548  0020  397F               	andlw	-129
   549  0021  0670               	xorwf	??_ISR,w
   550  0022  0087               	movwf	7	;volatile
   551  0023                     i1l687:
   552                           
   553                           ;main.c: 70:     if(PIR1bits.ADIF==1){
   554  0023  1F0C               	btfss	12,6	;volatile
   555  0024  2826               	goto	u2_21
   556  0025  2827               	goto	u2_20
   557  0026                     u2_21:
   558  0026  2853               	goto	i1l65
   559  0027                     u2_20:
   560  0027                     i1l689:
   561                           
   562                           ;main.c: 71:         VADC=ADRESH;
   563  0027  081E               	movf	30,w	;volatile
   564  0028  00F0               	movwf	??_ISR
   565  0029  0870               	movf	??_ISR,w
   566  002A  00F3               	movwf	_VADC
   567  002B                     i1l691:
   568                           
   569                           ;main.c: 72:         if(ADCON0bits.CHS0 == 1){
   570  002B  1D1F               	btfss	31,2	;volatile
   571  002C  282E               	goto	u3_21
   572  002D  282F               	goto	u3_20
   573  002E                     u3_21:
   574  002E  2831               	goto	i1l695
   575  002F                     u3_20:
   576  002F                     i1l693:
   577                           
   578                           ;main.c: 73:             PORTA = VADC;
   579  002F  0873               	movf	_VADC,w
   580  0030  0085               	movwf	5	;volatile
   581  0031                     i1l695:
   582                           
   583                           ;main.c: 75:         if(ADCON0bits.CHS0 != 1){
   584  0031  191F               	btfsc	31,2	;volatile
   585  0032  2834               	goto	u4_21
   586  0033  2835               	goto	u4_20
   587  0034                     u4_21:
   588  0034  2837               	goto	i1l699
   589  0035                     u4_20:
   590  0035                     i1l697:
   591                           
   592                           ;main.c: 76:             PORTD = VADC;
   593  0035  0873               	movf	_VADC,w
   594  0036  0088               	movwf	8	;volatile
   595  0037                     i1l699:
   596                           
   597                           ;main.c: 78:         ADCON0bits.CHS0 ^= 1;
   598  0037  0C1F               	rrf	31,w	;volatile
   599  0038  00F0               	movwf	??_ISR
   600  0039  0C70               	rrf	??_ISR,w
   601  003A  3901               	andlw	1
   602  003B  00F0               	movwf	??_ISR
   603  003C  3001               	movlw	1
   604  003D  06F0               	xorwf	??_ISR,f
   605  003E  0DF0               	rlf	??_ISR,f
   606  003F  0DF0               	rlf	??_ISR,f
   607  0040  081F               	movf	31,w	;volatile
   608  0041  0670               	xorwf	??_ISR,w
   609  0042  39FB               	andlw	-5
   610  0043  0670               	xorwf	??_ISR,w
   611  0044  009F               	movwf	31	;volatile
   612  0045                     i1l701:
   613                           
   614                           ;main.c: 79:         PORTCbits.RC7 ^= 1;
   615  0045  0D07               	rlf	7,w	;volatile
   616  0046  0D07               	rlf	7,w	;volatile
   617  0047  3901               	andlw	1
   618  0048  00F0               	movwf	??_ISR
   619  0049  3001               	movlw	1
   620  004A  06F0               	xorwf	??_ISR,f
   621  004B  0CF0               	rrf	??_ISR,f
   622  004C  0CF0               	rrf	??_ISR,f
   623  004D  0807               	movf	7,w	;volatile
   624  004E  0670               	xorwf	??_ISR,w
   625  004F  397F               	andlw	-129
   626  0050  0670               	xorwf	??_ISR,w
   627  0051  0087               	movwf	7	;volatile
   628  0052                     i1l703:
   629                           
   630                           ;main.c: 80:         PIR1bits.ADIF=0;
   631  0052  130C               	bcf	12,6	;volatile
   632  0053                     i1l65:
   633  0053  0872               	movf	??_ISR+2,w
   634  0054  008A               	movwf	10
   635  0055  0E71               	swapf	??_ISR+1,w
   636  0056  0083               	movwf	3
   637  0057  0EFE               	swapf	btemp,f
   638  0058  0E7E               	swapf	btemp,w
   639  0059  0009               	retfie
   640  005A                     __end_of_ISR:
   641  007E                     btemp	set	126	;btemp
   642  007E                     wtemp0	set	126
   643                           
   644                           	psect	intentry
   645  0004                     __pintentry:	
   646                           ;incstack = 0
   647                           ; Regs used in _ISR: [wreg+status,2+status,0]
   648                           
   649  0004                     interrupt_function:
   650  007E                     saved_w	set	btemp
   651  0004  00FE               	movwf	btemp
   652  0005  0E03               	swapf	3,w
   653  0006  00F1               	movwf	??_ISR+1
   654  0007  080A               	movf	10,w
   655  0008  00F2               	movwf	??_ISR+2
   656  0009  120A  118A  2814   	ljmp	_ISR
   657                           
   658                           	psect	idloc
   659                           
   660                           ;Config register IDLOC0 @ 0x2000
   661                           ;	unspecified, using default values
   662  2000                     	org	8192
   663  2000  3FFF               	dw	16383
   664                           
   665                           ;Config register IDLOC1 @ 0x2001
   666                           ;	unspecified, using default values
   667  2001                     	org	8193
   668  2001  3FFF               	dw	16383
   669                           
   670                           ;Config register IDLOC2 @ 0x2002
   671                           ;	unspecified, using default values
   672  2002                     	org	8194
   673  2002  3FFF               	dw	16383
   674                           
   675                           ;Config register IDLOC3 @ 0x2003
   676                           ;	unspecified, using default values
   677  2003                     	org	8195
   678  2003  3FFF               	dw	16383
   679                           
   680                           	psect	config
   681                           
   682                           ;Config register CONFIG1 @ 0x2007
   683                           ;	Oscillator Selection bits
   684                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
   685                           ;	Watchdog Timer Enable bit
   686                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   687                           ;	Power-up Timer Enable bit
   688                           ;	PWRTE = OFF, PWRT disabled
   689                           ;	RE3/MCLR pin function select bit
   690                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
   691                           ;	Code Protection bit
   692                           ;	CP = OFF, Program memory code protection is disabled
   693                           ;	Data Code Protection bit
   694                           ;	CPD = OFF, Data memory code protection is disabled
   695                           ;	Brown Out Reset Selection bits
   696                           ;	BOREN = OFF, BOR disabled
   697                           ;	Internal External Switchover bit
   698                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   699                           ;	Fail-Safe Clock Monitor Enabled bit
   700                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   701                           ;	Low Voltage Programming Enable bit
   702                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   703                           ;	In-Circuit Debugger Mode bit
   704                           ;	DEBUG = 0x1, unprogrammed default
   705  2007                     	org	8199
   706  2007  20D4               	dw	8404
   707                           
   708                           ;Config register CONFIG2 @ 0x2008
   709                           ;	Brown-out Reset Selection bit
   710                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   711                           ;	Flash Program Memory Self Write Enable bits
   712                           ;	WRT = OFF, Write protection off
   713  2008                     	org	8200
   714  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      3       4
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                              _GOCHK
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _GOCHK                                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _GOCHK
   _setup

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      3       4       1       28.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       4       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       4      12        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Thu Sep 29 20:58:40 2022

                     l44 0092                       l57 007C                       u10 0091  
                     u11 0090                      l661 005A                      l671 006A  
                    l663 005E                      l657 008B                      l673 006E  
                    l665 005F                      l681 007D                      l659 0091  
                    l675 0079                      l667 0066                      l683 0082  
                    l677 007B                      l669 0068                      _ISR 0014  
                   ?_ISR 0070                     _PIE1 008C                     i1l65 0053  
                   _VADC 0073                     u2_20 0027                     u2_21 0026  
                   u3_20 002F                     u3_21 002E                     u4_20 0035  
                   u4_21 0034                     _main 007D                     btemp 007E  
                   start 000C                    ??_ISR 0070                    ?_main 0070  
                  _ANSEL 0188                    _GOCHK 008B                    i1l701 0045  
                  i1l703 0052                    i1l691 002B                    i1l693 002F  
                  i1l685 0014                    i1l695 0031                    i1l687 0023  
                  i1l697 0035                    i1l689 0027                    i1l699 0037  
                  _PORTA 0005                    _PORTB 0006                    _PORTC 0007  
                  _PORTD 0008                    _TRISA 0085                    _TRISB 0086  
                  _TRISC 0087                    _TRISD 0088                    _setup 005A  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 000F             __end_of_main 008B                   ??_main 0073  
                 ?_GOCHK 0070                   _ADCON0 001F                   _ADCON1 009F  
                 _ADRESH 001E                   ?_setup 0070                   _ANSELH 0189  
                 _INTCON 000B                   _OSCCON 008F                   saved_w 007E  
__end_of__initialization 0010            __end_of_GOCHK 0093           __pcstackCOMMON 0070  
          __end_of_setup 007D                  ??_GOCHK 0073                  ??_setup 0073  
             __pmaintext 007D               __pintentry 0004                  __ptext1 005A  
                __ptext2 008B                  __ptext3 0014     end_of_initialization 0010  
              _PORTCbits 0007      start_initialization 000F              __end_of_ISR 005A  
            __pbssCOMMON 0073                ___latbits 0002        interrupt_function 0004  
               _PIR1bits 000C               _ADCON0bits 001F                 intlevel1 0000  
