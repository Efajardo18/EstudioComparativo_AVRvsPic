

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Tue Aug 09 20:00:16 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	intentry,global,class=CODE,delta=2
    13                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    14                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    15                           	dabs	1,0x7E,2
    16  0000                     
    17                           ; Version 2.40
    18                           ; Generated 17/11/2021 GMT
    19                           ; 
    20                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution. Publication is not required when
    34                           ;        this file is used in an embedded application.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC16F887 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52  0000                     	;# 
    53  0001                     	;# 
    54  0002                     	;# 
    55  0003                     	;# 
    56  0004                     	;# 
    57  0005                     	;# 
    58  0006                     	;# 
    59  0007                     	;# 
    60  0008                     	;# 
    61  0009                     	;# 
    62  000A                     	;# 
    63  000B                     	;# 
    64  000C                     	;# 
    65  000D                     	;# 
    66  000E                     	;# 
    67  000E                     	;# 
    68  000F                     	;# 
    69  0010                     	;# 
    70  0011                     	;# 
    71  0012                     	;# 
    72  0013                     	;# 
    73  0014                     	;# 
    74  0015                     	;# 
    75  0015                     	;# 
    76  0016                     	;# 
    77  0017                     	;# 
    78  0018                     	;# 
    79  0019                     	;# 
    80  001A                     	;# 
    81  001B                     	;# 
    82  001B                     	;# 
    83  001C                     	;# 
    84  001D                     	;# 
    85  001E                     	;# 
    86  001F                     	;# 
    87  0081                     	;# 
    88  0085                     	;# 
    89  0086                     	;# 
    90  0087                     	;# 
    91  0088                     	;# 
    92  0089                     	;# 
    93  008C                     	;# 
    94  008D                     	;# 
    95  008E                     	;# 
    96  008F                     	;# 
    97  0090                     	;# 
    98  0091                     	;# 
    99  0092                     	;# 
   100  0093                     	;# 
   101  0093                     	;# 
   102  0093                     	;# 
   103  0094                     	;# 
   104  0095                     	;# 
   105  0096                     	;# 
   106  0097                     	;# 
   107  0098                     	;# 
   108  0099                     	;# 
   109  009A                     	;# 
   110  009B                     	;# 
   111  009C                     	;# 
   112  009D                     	;# 
   113  009E                     	;# 
   114  009F                     	;# 
   115  0105                     	;# 
   116  0107                     	;# 
   117  0108                     	;# 
   118  0109                     	;# 
   119  010C                     	;# 
   120  010C                     	;# 
   121  010D                     	;# 
   122  010E                     	;# 
   123  010F                     	;# 
   124  0185                     	;# 
   125  0187                     	;# 
   126  0188                     	;# 
   127  0189                     	;# 
   128  018C                     	;# 
   129  018D                     	;# 
   130  0000                     	;# 
   131  0001                     	;# 
   132  0002                     	;# 
   133  0003                     	;# 
   134  0004                     	;# 
   135  0005                     	;# 
   136  0006                     	;# 
   137  0007                     	;# 
   138  0008                     	;# 
   139  0009                     	;# 
   140  000A                     	;# 
   141  000B                     	;# 
   142  000C                     	;# 
   143  000D                     	;# 
   144  000E                     	;# 
   145  000E                     	;# 
   146  000F                     	;# 
   147  0010                     	;# 
   148  0011                     	;# 
   149  0012                     	;# 
   150  0013                     	;# 
   151  0014                     	;# 
   152  0015                     	;# 
   153  0015                     	;# 
   154  0016                     	;# 
   155  0017                     	;# 
   156  0018                     	;# 
   157  0019                     	;# 
   158  001A                     	;# 
   159  001B                     	;# 
   160  001B                     	;# 
   161  001C                     	;# 
   162  001D                     	;# 
   163  001E                     	;# 
   164  001F                     	;# 
   165  0081                     	;# 
   166  0085                     	;# 
   167  0086                     	;# 
   168  0087                     	;# 
   169  0088                     	;# 
   170  0089                     	;# 
   171  008C                     	;# 
   172  008D                     	;# 
   173  008E                     	;# 
   174  008F                     	;# 
   175  0090                     	;# 
   176  0091                     	;# 
   177  0092                     	;# 
   178  0093                     	;# 
   179  0093                     	;# 
   180  0093                     	;# 
   181  0094                     	;# 
   182  0095                     	;# 
   183  0096                     	;# 
   184  0097                     	;# 
   185  0098                     	;# 
   186  0099                     	;# 
   187  009A                     	;# 
   188  009B                     	;# 
   189  009C                     	;# 
   190  009D                     	;# 
   191  009E                     	;# 
   192  009F                     	;# 
   193  0105                     	;# 
   194  0107                     	;# 
   195  0108                     	;# 
   196  0109                     	;# 
   197  010C                     	;# 
   198  010C                     	;# 
   199  010D                     	;# 
   200  010E                     	;# 
   201  010F                     	;# 
   202  0185                     	;# 
   203  0187                     	;# 
   204  0188                     	;# 
   205  0189                     	;# 
   206  018C                     	;# 
   207  018D                     	;# 
   208  001E                     _ADRESH	set	30
   209  000C                     _PIR1bits	set	12
   210  0008                     _PORTDbits	set	8
   211  0012                     _T2CON	set	18
   212  0015                     _CCPR1L	set	21
   213  0017                     _CCP1CON	set	23
   214  001F                     _ADCON0bits	set	31
   215  0008                     _PORTD	set	8
   216  0007                     _PORTC	set	7
   217  0006                     _PORTB	set	6
   218  0005                     _PORTA	set	5
   219  001F                     _ADCON0	set	31
   220  000B                     _INTCON	set	11
   221  0092                     _PR2	set	146
   222  009F                     _ADCON1	set	159
   223  008C                     _PIE1	set	140
   224  0088                     _TRISD	set	136
   225  0087                     _TRISC	set	135
   226  0086                     _TRISB	set	134
   227  0085                     _TRISA	set	133
   228  008F                     _OSCCON	set	143
   229  0189                     _ANSELH	set	393
   230  0188                     _ANSEL	set	392
   231                           
   232                           	psect	cinit
   233  000F                     start_initialization:	
   234                           ; #config settings
   235                           
   236  000F                     __initialization:
   237                           
   238                           ; Clear objects allocated to COMMON
   239  000F  01F3               	clrf	__pbssCOMMON& (0+127)
   240  0010                     end_of_initialization:	
   241                           ;End of C runtime variable initialization code
   242                           
   243  0010                     __end_of__initialization:
   244  0010  0183               	clrf	3
   245  0011  120A  118A  2862   	ljmp	_main	;jump to C main() function
   246                           
   247                           	psect	bssCOMMON
   248  0073                     __pbssCOMMON:
   249  0073                     _VADC:
   250  0073                     	ds	1
   251                           
   252                           	psect	cstackCOMMON
   253  0070                     __pcstackCOMMON:
   254  0070                     ?_setup:
   255  0070                     ?_PWM_setup:	
   256                           ; 1 bytes @ 0x0
   257                           
   258  0070                     ?_GOCHK:	
   259                           ; 1 bytes @ 0x0
   260                           
   261  0070                     ?_main:	
   262                           ; 1 bytes @ 0x0
   263                           
   264  0070                     ?_ISR:	
   265                           ; 1 bytes @ 0x0
   266                           
   267  0070                     ??_ISR:	
   268                           ; 1 bytes @ 0x0
   269                           
   270                           
   271                           ; 1 bytes @ 0x0
   272  0070                     	ds	3
   273  0073                     ??_setup:
   274  0073                     ??_PWM_setup:	
   275                           ; 1 bytes @ 0x3
   276                           
   277  0073                     ??_GOCHK:	
   278                           ; 1 bytes @ 0x3
   279                           
   280  0073                     ??_main:	
   281                           ; 1 bytes @ 0x3
   282                           
   283                           
   284                           	psect	maintext
   285  0062                     __pmaintext:	
   286                           ; 1 bytes @ 0x3
   287 ;;
   288 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   289 ;;
   290 ;; *************** function _main *****************
   291 ;; Defined at:
   292 ;;		line 42 in file "main.c"
   293 ;; Parameters:    Size  Location     Type
   294 ;;		None
   295 ;; Auto vars:     Size  Location     Type
   296 ;;		None
   297 ;; Return value:  Size  Location     Type
   298 ;;                  1    wreg      void 
   299 ;; Registers used:
   300 ;;		wreg, status,2, status,0, pclath, cstack
   301 ;; Tracked objects:
   302 ;;		On entry : B00/0
   303 ;;		On exit  : 0/0
   304 ;;		Unchanged: 0/0
   305 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   306 ;;      Params:         0       0       0       0       0
   307 ;;      Locals:         0       0       0       0       0
   308 ;;      Temps:          0       0       0       0       0
   309 ;;      Totals:         0       0       0       0       0
   310 ;;Total ram usage:        0 bytes
   311 ;; Hardware stack levels required when called: 2
   312 ;; This function calls:
   313 ;;		_GOCHK
   314 ;;		_PWM_setup
   315 ;;		_setup
   316 ;; This function is called by:
   317 ;;		Startup code after reset
   318 ;; This function uses a non-reentrant model
   319 ;;
   320                           
   321  0062                     _main:	
   322                           ;psect for function _main
   323                           
   324  0062                     l692:	
   325                           ;incstack = 0
   326                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   327                           
   328                           
   329                           ;main.c: 43:     setup();
   330  0062  120A  118A  2040  120A  118A  	fcall	_setup
   331                           
   332                           ;main.c: 44:     PWM_setup();
   333  0067  120A  118A  2075  120A  118A  	fcall	_PWM_setup
   334  006C                     l694:
   335                           
   336                           ;main.c: 46:         GOCHK();
   337  006C  120A  118A  2082  120A  118A  	fcall	_GOCHK
   338  0071  286C               	goto	l694
   339  0072  120A  118A  280C   	ljmp	start
   340  0075                     __end_of_main:
   341                           
   342                           	psect	text1
   343  0040                     __ptext1:	
   344 ;; *************** function _setup *****************
   345 ;; Defined at:
   346 ;;		line 51 in file "main.c"
   347 ;; Parameters:    Size  Location     Type
   348 ;;		None
   349 ;; Auto vars:     Size  Location     Type
   350 ;;		None
   351 ;; Return value:  Size  Location     Type
   352 ;;                  1    wreg      void 
   353 ;; Registers used:
   354 ;;		wreg, status,2
   355 ;; Tracked objects:
   356 ;;		On entry : 0/0
   357 ;;		On exit  : 0/0
   358 ;;		Unchanged: 0/0
   359 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   360 ;;      Params:         0       0       0       0       0
   361 ;;      Locals:         0       0       0       0       0
   362 ;;      Temps:          0       0       0       0       0
   363 ;;      Totals:         0       0       0       0       0
   364 ;;Total ram usage:        0 bytes
   365 ;; Hardware stack levels used: 1
   366 ;; Hardware stack levels required when called: 1
   367 ;; This function calls:
   368 ;;		Nothing
   369 ;; This function is called by:
   370 ;;		_main
   371 ;; This function uses a non-reentrant model
   372 ;;
   373                           
   374  0040                     _setup:	
   375                           ;psect for function _setup
   376                           
   377  0040                     l670:	
   378                           ;incstack = 0
   379                           ; Regs used in _setup: [wreg+status,2]
   380                           
   381                           
   382                           ;main.c: 52:     OSCCON = 0b01111000;
   383  0040  3078               	movlw	120
   384  0041  1683               	bsf	3,5	;RP0=1, select bank1
   385  0042  1303               	bcf	3,6	;RP1=0, select bank1
   386  0043  008F               	movwf	15	;volatile
   387  0044                     l672:
   388                           
   389                           ;main.c: 53:     TRISA = 0b00000000;
   390  0044  0185               	clrf	5	;volatile
   391  0045                     l674:
   392                           
   393                           ;main.c: 54:     TRISB = 0b00100001;
   394  0045  3021               	movlw	33
   395  0046  0086               	movwf	6	;volatile
   396                           
   397                           ;main.c: 55:     TRISC = 0b00000000;
   398  0047  0187               	clrf	7	;volatile
   399                           
   400                           ;main.c: 56:     TRISD = 0b00000000;
   401  0048  0188               	clrf	8	;volatile
   402                           
   403                           ;main.c: 57:     ANSEL = 0b00000000;
   404  0049  1683               	bsf	3,5	;RP0=1, select bank3
   405  004A  1703               	bsf	3,6	;RP1=1, select bank3
   406  004B  0188               	clrf	8	;volatile
   407  004C                     l676:
   408                           
   409                           ;main.c: 58:     ANSELH = 0b00110000;
   410  004C  3030               	movlw	48
   411  004D  0089               	movwf	9	;volatile
   412  004E                     l678:
   413                           
   414                           ;main.c: 59:     INTCON = 0b11000000;
   415  004E  30C0               	movlw	192
   416  004F  008B               	movwf	11	;volatile
   417  0050                     l680:
   418                           
   419                           ;main.c: 60:     PIE1 = 0b01000000;
   420  0050  3040               	movlw	64
   421  0051  1683               	bsf	3,5	;RP0=1, select bank1
   422  0052  1303               	bcf	3,6	;RP1=0, select bank1
   423  0053  008C               	movwf	12	;volatile
   424  0054                     l682:
   425                           
   426                           ;main.c: 61:     ADCON0 = 0b10110101;
   427  0054  30B5               	movlw	181
   428  0055  1283               	bcf	3,5	;RP0=0, select bank0
   429  0056  1303               	bcf	3,6	;RP1=0, select bank0
   430  0057  009F               	movwf	31	;volatile
   431                           
   432                           ;main.c: 62:     ADCON1 = 0b00000000;
   433  0058  1683               	bsf	3,5	;RP0=1, select bank1
   434  0059  1303               	bcf	3,6	;RP1=0, select bank1
   435  005A  019F               	clrf	31	;volatile
   436                           
   437                           ;main.c: 63:     PORTA = 0;
   438  005B  1283               	bcf	3,5	;RP0=0, select bank0
   439  005C  1303               	bcf	3,6	;RP1=0, select bank0
   440  005D  0185               	clrf	5	;volatile
   441                           
   442                           ;main.c: 64:     PORTB = 0;
   443  005E  0186               	clrf	6	;volatile
   444                           
   445                           ;main.c: 65:     PORTC = 0;
   446  005F  0187               	clrf	7	;volatile
   447                           
   448                           ;main.c: 66:     PORTD = 0;
   449  0060  0188               	clrf	8	;volatile
   450  0061                     l65:
   451  0061  0008               	return
   452  0062                     __end_of_setup:
   453                           
   454                           	psect	text2
   455  0075                     __ptext2:	
   456 ;; *************** function _PWM_setup *****************
   457 ;; Defined at:
   458 ;;		line 76 in file "main.c"
   459 ;; Parameters:    Size  Location     Type
   460 ;;		None
   461 ;; Auto vars:     Size  Location     Type
   462 ;;		None
   463 ;; Return value:  Size  Location     Type
   464 ;;                  1    wreg      void 
   465 ;; Registers used:
   466 ;;		wreg
   467 ;; Tracked objects:
   468 ;;		On entry : 0/0
   469 ;;		On exit  : 0/0
   470 ;;		Unchanged: 0/0
   471 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   472 ;;      Params:         0       0       0       0       0
   473 ;;      Locals:         0       0       0       0       0
   474 ;;      Temps:          0       0       0       0       0
   475 ;;      Totals:         0       0       0       0       0
   476 ;;Total ram usage:        0 bytes
   477 ;; Hardware stack levels used: 1
   478 ;; Hardware stack levels required when called: 1
   479 ;; This function calls:
   480 ;;		Nothing
   481 ;; This function is called by:
   482 ;;		_main
   483 ;; This function uses a non-reentrant model
   484 ;;
   485                           
   486  0075                     _PWM_setup:	
   487                           ;psect for function _PWM_setup
   488                           
   489  0075                     l686:	
   490                           ;incstack = 0
   491                           ; Regs used in _PWM_setup: [wreg]
   492                           
   493                           
   494                           ;main.c: 77:     PR2 = 0b11111001;
   495  0075  30F9               	movlw	249
   496  0076  1683               	bsf	3,5	;RP0=1, select bank1
   497  0077  1303               	bcf	3,6	;RP1=0, select bank1
   498  0078  0092               	movwf	18	;volatile
   499                           
   500                           ;main.c: 78:     CCP1CON = 0b00111100;
   501  0079  303C               	movlw	60
   502  007A  1283               	bcf	3,5	;RP0=0, select bank0
   503  007B  1303               	bcf	3,6	;RP1=0, select bank0
   504  007C  0097               	movwf	23	;volatile
   505                           
   506                           ;main.c: 79:     CCPR1L = 0b01111100;
   507  007D  307C               	movlw	124
   508  007E  0095               	movwf	21	;volatile
   509                           
   510                           ;main.c: 80:     T2CON = 0b00000111;
   511  007F  3007               	movlw	7
   512  0080  0092               	movwf	18	;volatile
   513  0081                     l72:
   514  0081  0008               	return
   515  0082                     __end_of_PWM_setup:
   516                           
   517                           	psect	text3
   518  0082                     __ptext3:	
   519 ;; *************** function _GOCHK *****************
   520 ;; Defined at:
   521 ;;		line 70 in file "main.c"
   522 ;; Parameters:    Size  Location     Type
   523 ;;		None
   524 ;; Auto vars:     Size  Location     Type
   525 ;;		None
   526 ;; Return value:  Size  Location     Type
   527 ;;                  1    wreg      void 
   528 ;; Registers used:
   529 ;;		None
   530 ;; Tracked objects:
   531 ;;		On entry : 0/0
   532 ;;		On exit  : 0/0
   533 ;;		Unchanged: 0/0
   534 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   535 ;;      Params:         0       0       0       0       0
   536 ;;      Locals:         0       0       0       0       0
   537 ;;      Temps:          0       0       0       0       0
   538 ;;      Totals:         0       0       0       0       0
   539 ;;Total ram usage:        0 bytes
   540 ;; Hardware stack levels used: 1
   541 ;; Hardware stack levels required when called: 1
   542 ;; This function calls:
   543 ;;		Nothing
   544 ;; This function is called by:
   545 ;;		_main
   546 ;; This function uses a non-reentrant model
   547 ;;
   548                           
   549  0082                     _GOCHK:	
   550                           ;psect for function _GOCHK
   551                           
   552  0082                     l688:	
   553                           ;incstack = 0
   554                           ; Regs used in _GOCHK: []
   555                           
   556                           
   557                           ;main.c: 71:     if(ADCON0bits.GO==0){
   558  0082  1283               	bcf	3,5	;RP0=0, select bank0
   559  0083  1303               	bcf	3,6	;RP1=0, select bank0
   560  0084  189F               	btfsc	31,1	;volatile
   561  0085  2887               	goto	u11
   562  0086  2888               	goto	u10
   563  0087                     u11:
   564  0087  2889               	goto	l69
   565  0088                     u10:
   566  0088                     l690:
   567                           
   568                           ;main.c: 72:             ADCON0bits.GO=1;
   569  0088  149F               	bsf	31,1	;volatile
   570  0089                     l69:
   571  0089  0008               	return
   572  008A                     __end_of_GOCHK:
   573                           
   574                           	psect	text4
   575  0014                     __ptext4:	
   576 ;; *************** function _ISR *****************
   577 ;; Defined at:
   578 ;;		line 83 in file "main.c"
   579 ;; Parameters:    Size  Location     Type
   580 ;;		None
   581 ;; Auto vars:     Size  Location     Type
   582 ;;		None
   583 ;; Return value:  Size  Location     Type
   584 ;;                  1    wreg      void 
   585 ;; Registers used:
   586 ;;		wreg, status,2, status,0
   587 ;; Tracked objects:
   588 ;;		On entry : 0/0
   589 ;;		On exit  : 0/0
   590 ;;		Unchanged: 0/0
   591 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   592 ;;      Params:         0       0       0       0       0
   593 ;;      Locals:         0       0       0       0       0
   594 ;;      Temps:          3       0       0       0       0
   595 ;;      Totals:         3       0       0       0       0
   596 ;;Total ram usage:        3 bytes
   597 ;; Hardware stack levels used: 1
   598 ;; This function calls:
   599 ;;		Nothing
   600 ;; This function is called by:
   601 ;;		Interrupt level 1
   602 ;; This function uses a non-reentrant model
   603 ;;
   604                           
   605  0014                     _ISR:	
   606                           ;psect for function _ISR
   607                           
   608  0014                     i1l696:
   609                           
   610                           ;main.c: 84:     PORTDbits.RD4 ^= 1;
   611  0014  1283               	bcf	3,5	;RP0=0, select bank0
   612  0015  1303               	bcf	3,6	;RP1=0, select bank0
   613  0016  0E08               	swapf	8,w	;volatile
   614  0017  3901               	andlw	1
   615  0018  00F0               	movwf	??_ISR
   616  0019  3001               	movlw	1
   617  001A  06F0               	xorwf	??_ISR,f
   618  001B  0EF0               	swapf	??_ISR,f
   619  001C  0808               	movf	8,w	;volatile
   620  001D  0670               	xorwf	??_ISR,w
   621  001E  39EF               	andlw	-17
   622  001F  0670               	xorwf	??_ISR,w
   623  0020  0088               	movwf	8	;volatile
   624  0021                     i1l698:
   625                           
   626                           ;main.c: 85:     if(PIR1bits.ADIF==1){
   627  0021  1F0C               	btfss	12,6	;volatile
   628  0022  2824               	goto	u2_21
   629  0023  2825               	goto	u2_20
   630  0024                     u2_21:
   631  0024  2839               	goto	i1l78
   632  0025                     u2_20:
   633  0025                     i1l700:
   634                           
   635                           ;main.c: 86:         VADC=ADRESH;
   636  0025  081E               	movf	30,w	;volatile
   637  0026  00F0               	movwf	??_ISR
   638  0027  0870               	movf	??_ISR,w
   639  0028  00F3               	movwf	_VADC
   640                           
   641                           ;main.c: 87:         PORTA = VADC;
   642  0029  0873               	movf	_VADC,w
   643  002A  0085               	movwf	5	;volatile
   644                           
   645                           ;main.c: 88:         CCPR1L = VADC;
   646  002B  0873               	movf	_VADC,w
   647  002C  0095               	movwf	21	;volatile
   648  002D                     i1l702:
   649                           
   650                           ;main.c: 89:         PORTDbits.RD4 ^= 1;
   651  002D  0E08               	swapf	8,w	;volatile
   652  002E  3901               	andlw	1
   653  002F  00F0               	movwf	??_ISR
   654  0030  3001               	movlw	1
   655  0031  06F0               	xorwf	??_ISR,f
   656  0032  0EF0               	swapf	??_ISR,f
   657  0033  0808               	movf	8,w	;volatile
   658  0034  0670               	xorwf	??_ISR,w
   659  0035  39EF               	andlw	-17
   660  0036  0670               	xorwf	??_ISR,w
   661  0037  0088               	movwf	8	;volatile
   662  0038                     i1l704:
   663                           
   664                           ;main.c: 90:         PIR1bits.ADIF=0;
   665  0038  130C               	bcf	12,6	;volatile
   666  0039                     i1l78:
   667  0039  0872               	movf	??_ISR+2,w
   668  003A  008A               	movwf	10
   669  003B  0E71               	swapf	??_ISR+1,w
   670  003C  0083               	movwf	3
   671  003D  0EFE               	swapf	btemp,f
   672  003E  0E7E               	swapf	btemp,w
   673  003F  0009               	retfie
   674  0040                     __end_of_ISR:
   675  007E                     btemp	set	126	;btemp
   676  007E                     wtemp0	set	126
   677                           
   678                           	psect	intentry
   679  0004                     __pintentry:	
   680                           ;incstack = 0
   681                           ; Regs used in _ISR: [wreg+status,2+status,0]
   682                           
   683  0004                     interrupt_function:
   684  007E                     saved_w	set	btemp
   685  0004  00FE               	movwf	btemp
   686  0005  0E03               	swapf	3,w
   687  0006  00F1               	movwf	??_ISR+1
   688  0007  080A               	movf	10,w
   689  0008  00F2               	movwf	??_ISR+2
   690  0009  120A  118A  2814   	ljmp	_ISR
   691                           
   692                           	psect	idloc
   693                           
   694                           ;Config register IDLOC0 @ 0x2000
   695                           ;	unspecified, using default values
   696  2000                     	org	8192
   697  2000  3FFF               	dw	16383
   698                           
   699                           ;Config register IDLOC1 @ 0x2001
   700                           ;	unspecified, using default values
   701  2001                     	org	8193
   702  2001  3FFF               	dw	16383
   703                           
   704                           ;Config register IDLOC2 @ 0x2002
   705                           ;	unspecified, using default values
   706  2002                     	org	8194
   707  2002  3FFF               	dw	16383
   708                           
   709                           ;Config register IDLOC3 @ 0x2003
   710                           ;	unspecified, using default values
   711  2003                     	org	8195
   712  2003  3FFF               	dw	16383
   713                           
   714                           	psect	config
   715                           
   716                           ;Config register CONFIG1 @ 0x2007
   717                           ;	Oscillator Selection bits
   718                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
   719                           ;	Watchdog Timer Enable bit
   720                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   721                           ;	Power-up Timer Enable bit
   722                           ;	PWRTE = OFF, PWRT disabled
   723                           ;	RE3/MCLR pin function select bit
   724                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
   725                           ;	Code Protection bit
   726                           ;	CP = OFF, Program memory code protection is disabled
   727                           ;	Data Code Protection bit
   728                           ;	CPD = OFF, Data memory code protection is disabled
   729                           ;	Brown Out Reset Selection bits
   730                           ;	BOREN = OFF, BOR disabled
   731                           ;	Internal External Switchover bit
   732                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   733                           ;	Fail-Safe Clock Monitor Enabled bit
   734                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   735                           ;	Low Voltage Programming Enable bit
   736                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   737                           ;	In-Circuit Debugger Mode bit
   738                           ;	DEBUG = 0x1, unprogrammed default
   739  2007                     	org	8199
   740  2007  20D4               	dw	8404
   741                           
   742                           ;Config register CONFIG2 @ 0x2008
   743                           ;	Brown-out Reset Selection bit
   744                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   745                           ;	Flash Program Memory Self Write Enable bits
   746                           ;	WRT = OFF, Write protection off
   747  2008                     	org	8200
   748  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      3       4
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                              _GOCHK
                          _PWM_setup
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM_setup                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _GOCHK                                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _GOCHK
   _PWM_setup
   _setup

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      3       4       1       28.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       4       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       4      12        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Tue Aug 09 20:00:16 2022

                     l72 0081                       l65 0061                       l69 0089  
                     u10 0088                       u11 0087                      l670 0040  
                    l680 0050                      l672 0044                      l690 0088  
                    l682 0054                      l674 0045                      l676 004C  
                    l692 0062                      l686 0075                      l678 004E  
                    l694 006C                      l688 0082                      _PR2 0092  
                    _ISR 0014                     ?_ISR 0070                     _PIE1 008C  
                   i1l78 0039                     _VADC 0073                     u2_20 0025  
                   u2_21 0024                     _main 0062                     btemp 007E  
                   start 000C                    ??_ISR 0070                    ?_main 0070  
                  _ANSEL 0188                    _T2CON 0012                    _GOCHK 0082  
                  i1l700 0025                    i1l702 002D                    i1l704 0038  
                  i1l696 0014                    i1l698 0021                    _PORTA 0005  
                  _PORTB 0006                    _PORTC 0007                    _PORTD 0008  
                  _TRISA 0085                    _TRISB 0086                    _TRISC 0087  
                  _TRISD 0088                    _setup 0040                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 000F  
           __end_of_main 0075                   ??_main 0073                   ?_GOCHK 0070  
                 _ADCON0 001F                   _ADCON1 009F                   _ADRESH 001E  
                 _CCPR1L 0015                   ?_setup 0070                   _ANSELH 0189  
                 _INTCON 000B                   _OSCCON 008F                   saved_w 007E  
      __end_of_PWM_setup 0082  __end_of__initialization 0010            __end_of_GOCHK 008A  
         __pcstackCOMMON 0070            __end_of_setup 0062                  ??_GOCHK 0073  
                ??_setup 0073               __pmaintext 0062               __pintentry 0004  
                _CCP1CON 0017                  __ptext1 0040                  __ptext2 0075  
                __ptext3 0082                  __ptext4 0014     end_of_initialization 0010  
              _PORTDbits 0008                _PWM_setup 0075      start_initialization 000F  
            __end_of_ISR 0040               ?_PWM_setup 0070              __pbssCOMMON 0073  
              ___latbits 0002              ??_PWM_setup 0073        interrupt_function 0004  
               _PIR1bits 000C               _ADCON0bits 001F                 intlevel1 0000  
