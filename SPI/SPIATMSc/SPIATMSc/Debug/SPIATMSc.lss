
SPIATMSc.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00000233  000002e7  2**0
                  ALLOC, LOAD, DATA
  1 .text         000000c8  00000000  00000000  000000b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      0000002f  00000000  00000000  000002e7  2**0
                  CONTENTS, READONLY
  3 .stack.descriptors.hdr 0000000e  00000000  00000000  00000316  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000088  00000000  00000000  00000324  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000ca1  00000000  00000000  000003ac  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000797  00000000  00000000  0000104d  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000628  00000000  00000000  000017e4  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000130  00000000  00000000  00001e0c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000226  00000000  00000000  00001f3c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000043d  00000000  00000000  00002162  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000078  00000000  00000000  0000259f  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .text         00000004  00000224  00000224  000002d8  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 13 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00002618  2**2
                  CONTENTS, READONLY, DEBUGGING
 14 .text.SPIATM_sck 0000001e  000001ea  000001ea  0000029e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 15 .text.SPIATM_set 000000d4  000000c8  000000c8  0000017c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 16 .text.IO_set  00000006  0000021e  0000021e  000002d2  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 17 .text.main    0000002a  0000019c  0000019c  00000250  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 18 .text.__vector_17 00000024  000001c6  000001c6  0000027a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 19 .data.tData   00000001  00800100  00000232  000002e6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 20 .bss.rData    00000001  00800101  00800101  000002e7  2**0
                  ALLOC
 21 .text.__dummy_fini 00000002  0000022c  0000022c  000002e0  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 22 .text.__dummy_funcs_on_exit 00000002  0000022e  0000022e  000002e2  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 23 .text.__dummy_simulator_exit 00000002  00000230  00000230  000002e4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 24 .text.exit    00000016  00000208  00000208  000002bc  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 25 .text._Exit   00000004  00000228  00000228  000002dc  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 3a 00 	jmp	0x74	; 0x74 <__ctors_end>
   4:	0c 94 12 01 	jmp	0x224	; 0x224 <__bad_interrupt>
   8:	0c 94 12 01 	jmp	0x224	; 0x224 <__bad_interrupt>
   c:	0c 94 12 01 	jmp	0x224	; 0x224 <__bad_interrupt>
  10:	0c 94 12 01 	jmp	0x224	; 0x224 <__bad_interrupt>
  14:	0c 94 12 01 	jmp	0x224	; 0x224 <__bad_interrupt>
  18:	0c 94 12 01 	jmp	0x224	; 0x224 <__bad_interrupt>
  1c:	0c 94 12 01 	jmp	0x224	; 0x224 <__bad_interrupt>
  20:	0c 94 12 01 	jmp	0x224	; 0x224 <__bad_interrupt>
  24:	0c 94 12 01 	jmp	0x224	; 0x224 <__bad_interrupt>
  28:	0c 94 12 01 	jmp	0x224	; 0x224 <__bad_interrupt>
  2c:	0c 94 12 01 	jmp	0x224	; 0x224 <__bad_interrupt>
  30:	0c 94 12 01 	jmp	0x224	; 0x224 <__bad_interrupt>
  34:	0c 94 12 01 	jmp	0x224	; 0x224 <__bad_interrupt>
  38:	0c 94 12 01 	jmp	0x224	; 0x224 <__bad_interrupt>
  3c:	0c 94 12 01 	jmp	0x224	; 0x224 <__bad_interrupt>
  40:	0c 94 12 01 	jmp	0x224	; 0x224 <__bad_interrupt>
  44:	0c 94 e3 00 	jmp	0x1c6	; 0x1c6 <__vector_17>
  48:	0c 94 12 01 	jmp	0x224	; 0x224 <__bad_interrupt>
  4c:	0c 94 12 01 	jmp	0x224	; 0x224 <__bad_interrupt>
  50:	0c 94 12 01 	jmp	0x224	; 0x224 <__bad_interrupt>
  54:	0c 94 12 01 	jmp	0x224	; 0x224 <__bad_interrupt>
  58:	0c 94 12 01 	jmp	0x224	; 0x224 <__bad_interrupt>
  5c:	0c 94 12 01 	jmp	0x224	; 0x224 <__bad_interrupt>
  60:	0c 94 12 01 	jmp	0x224	; 0x224 <__bad_interrupt>
  64:	0c 94 12 01 	jmp	0x224	; 0x224 <__bad_interrupt>

00000068 <.dinit>:
  68:	01 00       	.word	0x0001	; ????
  6a:	01 01       	movw	r0, r2
  6c:	00 02       	muls	r16, r16
  6e:	32 01       	movw	r6, r4
  70:	01 01       	movw	r0, r2
  72:	02 80       	ldd	r0, Z+2	; 0x02

00000074 <__ctors_end>:
  74:	11 24       	eor	r1, r1
  76:	1f be       	out	0x3f, r1	; 63
  78:	cf ef       	ldi	r28, 0xFF	; 255
  7a:	d8 e0       	ldi	r29, 0x08	; 8
  7c:	de bf       	out	0x3e, r29	; 62
  7e:	cd bf       	out	0x3d, r28	; 61

00000080 <__do_copy_data>:
  80:	e8 e6       	ldi	r30, 0x68	; 104
  82:	f0 e0       	ldi	r31, 0x00	; 0
  84:	40 e0       	ldi	r20, 0x00	; 0
  86:	17 c0       	rjmp	.+46     	; 0xb6 <__do_clear_bss+0x8>
  88:	b5 91       	lpm	r27, Z+
  8a:	a5 91       	lpm	r26, Z+
  8c:	35 91       	lpm	r19, Z+
  8e:	25 91       	lpm	r18, Z+
  90:	05 91       	lpm	r16, Z+
  92:	07 fd       	sbrc	r16, 7
  94:	0c c0       	rjmp	.+24     	; 0xae <__do_clear_bss>
  96:	95 91       	lpm	r25, Z+
  98:	85 91       	lpm	r24, Z+
  9a:	ef 01       	movw	r28, r30
  9c:	f9 2f       	mov	r31, r25
  9e:	e8 2f       	mov	r30, r24
  a0:	05 90       	lpm	r0, Z+
  a2:	0d 92       	st	X+, r0
  a4:	a2 17       	cp	r26, r18
  a6:	b3 07       	cpc	r27, r19
  a8:	d9 f7       	brne	.-10     	; 0xa0 <__do_copy_data+0x20>
  aa:	fe 01       	movw	r30, r28
  ac:	04 c0       	rjmp	.+8      	; 0xb6 <__do_clear_bss+0x8>

000000ae <__do_clear_bss>:
  ae:	1d 92       	st	X+, r1
  b0:	a2 17       	cp	r26, r18
  b2:	b3 07       	cpc	r27, r19
  b4:	e1 f7       	brne	.-8      	; 0xae <__do_clear_bss>
  b6:	e4 37       	cpi	r30, 0x74	; 116
  b8:	f4 07       	cpc	r31, r20
  ba:	31 f7       	brne	.-52     	; 0x88 <__do_copy_data+0x8>
  bc:	0e 94 ce 00 	call	0x19c	; 0x19c <main>
  c0:	0c 94 04 01 	jmp	0x208	; 0x208 <exit>

000000c4 <_exit>:
  c4:	f8 94       	cli

000000c6 <__stop_program>:
  c6:	ff cf       	rjmp	.-2      	; 0xc6 <__stop_program>

Disassembly of section .text:

00000224 <__bad_interrupt>:
 224:	0c 94 00 00 	jmp	0	; 0x0 <__TEXT_REGION_ORIGIN__>

Disassembly of section .text.SPIATM_sck:

000001ea <SPIATM_sck>:
}

void SPIATM_Tx(uint8_t tData){
	SPDR = tData;
	while (!(SPSR & (1<<SPIF)));
}
 1ea:	82 30       	cpi	r24, 0x02	; 2
 1ec:	10 f0       	brcs	.+4      	; 0x1f2 <SPIATM_sck+0x8>
 1ee:	88 30       	cpi	r24, 0x08	; 8
 1f0:	21 f4       	brne	.+8      	; 0x1fa <SPIATM_sck+0x10>
 1f2:	9d b5       	in	r25, 0x2d	; 45
 1f4:	91 60       	ori	r25, 0x01	; 1
 1f6:	9d bd       	out	0x2d, r25	; 45
 1f8:	03 c0       	rjmp	.+6      	; 0x200 <SPIATM_sck+0x16>
 1fa:	9d b5       	in	r25, 0x2d	; 45
 1fc:	9e 7f       	andi	r25, 0xFE	; 254
 1fe:	9d bd       	out	0x2d, r25	; 45
 200:	9c b5       	in	r25, 0x2c	; 44
 202:	89 2b       	or	r24, r25
 204:	8c bd       	out	0x2c, r24	; 44
 206:	08 95       	ret

Disassembly of section .text.SPIATM_set:

000000c8 <SPIATM_set>:
  c8:	ef 92       	push	r14
  ca:	ff 92       	push	r15
  cc:	0f 93       	push	r16
  ce:	cf 93       	push	r28
  d0:	df 93       	push	r29
  d2:	c8 2f       	mov	r28, r24
  d4:	d6 2f       	mov	r29, r22
  d6:	7a 01       	movw	r14, r20
  d8:	21 30       	cpi	r18, 0x01	; 1
  da:	69 f4       	brne	.+26     	; 0xf6 <SPIATM_set+0x2e>
  dc:	84 b1       	in	r24, 0x04	; 4
  de:	8f 7e       	andi	r24, 0xEF	; 239
  e0:	84 b9       	out	0x04, r24	; 4
  e2:	84 b1       	in	r24, 0x04	; 4
  e4:	8c 62       	ori	r24, 0x2C	; 44
  e6:	84 b9       	out	0x04, r24	; 4
  e8:	8c b5       	in	r24, 0x2c	; 44
  ea:	80 61       	ori	r24, 0x10	; 16
  ec:	8c bd       	out	0x2c, r24	; 44
  ee:	80 2f       	mov	r24, r16
  f0:	0e 94 f5 00 	call	0x1ea	; 0x1ea <SPIATM_sck>
  f4:	0b c0       	rjmp	.+22     	; 0x10c <SPIATM_set+0x44>
  f6:	21 11       	cpse	r18, r1
  f8:	09 c0       	rjmp	.+18     	; 0x10c <SPIATM_set+0x44>
  fa:	84 b1       	in	r24, 0x04	; 4
  fc:	80 61       	ori	r24, 0x10	; 16
  fe:	84 b9       	out	0x04, r24	; 4
 100:	84 b1       	in	r24, 0x04	; 4
 102:	83 7d       	andi	r24, 0xD3	; 211
 104:	84 b9       	out	0x04, r24	; 4
 106:	8c b5       	in	r24, 0x2c	; 44
 108:	8f 7e       	andi	r24, 0xEF	; 239
 10a:	8c bd       	out	0x2c, r24	; 44
 10c:	c1 30       	cpi	r28, 0x01	; 1
 10e:	31 f4       	brne	.+12     	; 0x11c <SPIATM_set+0x54>
 110:	d1 30       	cpi	r29, 0x01	; 1
 112:	21 f4       	brne	.+8      	; 0x11c <SPIATM_set+0x54>
 114:	8c b5       	in	r24, 0x2c	; 44
 116:	80 6e       	ori	r24, 0xE0	; 224
 118:	8c bd       	out	0x2c, r24	; 44
 11a:	1a c0       	rjmp	.+52     	; 0x150 <SPIATM_set+0x88>
 11c:	c1 11       	cpse	r28, r1
 11e:	07 c0       	rjmp	.+14     	; 0x12e <SPIATM_set+0x66>
 120:	d1 11       	cpse	r29, r1
 122:	05 c0       	rjmp	.+10     	; 0x12e <SPIATM_set+0x66>
 124:	8c b5       	in	r24, 0x2c	; 44
 126:	8f 71       	andi	r24, 0x1F	; 31
 128:	80 64       	ori	r24, 0x40	; 64
 12a:	8c bd       	out	0x2c, r24	; 44
 12c:	11 c0       	rjmp	.+34     	; 0x150 <SPIATM_set+0x88>
 12e:	c1 30       	cpi	r28, 0x01	; 1
 130:	39 f4       	brne	.+14     	; 0x140 <SPIATM_set+0x78>
 132:	d1 11       	cpse	r29, r1
 134:	05 c0       	rjmp	.+10     	; 0x140 <SPIATM_set+0x78>
 136:	8c b5       	in	r24, 0x2c	; 44
 138:	8f 7d       	andi	r24, 0xDF	; 223
 13a:	80 6c       	ori	r24, 0xC0	; 192
 13c:	8c bd       	out	0x2c, r24	; 44
 13e:	08 c0       	rjmp	.+16     	; 0x150 <SPIATM_set+0x88>
 140:	c1 11       	cpse	r28, r1
 142:	06 c0       	rjmp	.+12     	; 0x150 <SPIATM_set+0x88>
 144:	d1 30       	cpi	r29, 0x01	; 1
 146:	21 f4       	brne	.+8      	; 0x150 <SPIATM_set+0x88>
 148:	8c b5       	in	r24, 0x2c	; 44
 14a:	8f 71       	andi	r24, 0x1F	; 31
 14c:	80 66       	ori	r24, 0x60	; 96
 14e:	8c bd       	out	0x2c, r24	; 44
 150:	e1 14       	cp	r14, r1
 152:	f1 04       	cpc	r15, r1
 154:	21 f4       	brne	.+8      	; 0x15e <SPIATM_set+0x96>
 156:	8c b5       	in	r24, 0x2c	; 44
 158:	83 7f       	andi	r24, 0xF3	; 243
 15a:	8c bd       	out	0x2c, r24	; 44
 15c:	19 c0       	rjmp	.+50     	; 0x190 <SPIATM_set+0xc8>
 15e:	81 e0       	ldi	r24, 0x01	; 1
 160:	e8 16       	cp	r14, r24
 162:	f1 04       	cpc	r15, r1
 164:	29 f4       	brne	.+10     	; 0x170 <SPIATM_set+0xa8>
 166:	8c b5       	in	r24, 0x2c	; 44
 168:	83 7f       	andi	r24, 0xF3	; 243
 16a:	88 60       	ori	r24, 0x08	; 8
 16c:	8c bd       	out	0x2c, r24	; 44
 16e:	10 c0       	rjmp	.+32     	; 0x190 <SPIATM_set+0xc8>
 170:	82 e0       	ldi	r24, 0x02	; 2
 172:	e8 16       	cp	r14, r24
 174:	f1 04       	cpc	r15, r1
 176:	29 f4       	brne	.+10     	; 0x182 <SPIATM_set+0xba>
 178:	8c b5       	in	r24, 0x2c	; 44
 17a:	87 7f       	andi	r24, 0xF7	; 247
 17c:	84 60       	ori	r24, 0x04	; 4
 17e:	8c bd       	out	0x2c, r24	; 44
 180:	07 c0       	rjmp	.+14     	; 0x190 <SPIATM_set+0xc8>
 182:	83 e0       	ldi	r24, 0x03	; 3
 184:	e8 16       	cp	r14, r24
 186:	f1 04       	cpc	r15, r1
 188:	19 f4       	brne	.+6      	; 0x190 <SPIATM_set+0xc8>
 18a:	8c b5       	in	r24, 0x2c	; 44
 18c:	8c 60       	ori	r24, 0x0C	; 12
 18e:	8c bd       	out	0x2c, r24	; 44
 190:	df 91       	pop	r29
 192:	cf 91       	pop	r28
 194:	0f 91       	pop	r16
 196:	ff 90       	pop	r15
 198:	ef 90       	pop	r14
 19a:	08 95       	ret

Disassembly of section .text.IO_set:

0000021e <IO_set>:
    }
}

void IO_set(void)
{
	DDRC = 0x00;
 21e:	17 b8       	out	0x07, r1	; 7
	PORTC = 0x00; 
 220:	18 b8       	out	0x08, r1	; 8
 222:	08 95       	ret

Disassembly of section .text.main:

0000019c <main>:
 19c:	0e 94 0f 01 	call	0x21e	; 0x21e <IO_set>
 1a0:	08 e0       	ldi	r16, 0x08	; 8
 1a2:	20 e0       	ldi	r18, 0x00	; 0
 1a4:	40 e0       	ldi	r20, 0x00	; 0
 1a6:	50 e0       	ldi	r21, 0x00	; 0
 1a8:	61 e0       	ldi	r22, 0x01	; 1
 1aa:	81 e0       	ldi	r24, 0x01	; 1
 1ac:	0e 94 64 00 	call	0xc8	; 0xc8 <__data_load_end>
 1b0:	8f e1       	ldi	r24, 0x1F	; 31
 1b2:	9e e4       	ldi	r25, 0x4E	; 78
 1b4:	01 97       	sbiw	r24, 0x01	; 1
 1b6:	f1 f7       	brne	.-4      	; 0x1b4 <main+0x18>
 1b8:	00 c0       	rjmp	.+0      	; 0x1ba <main+0x1e>
 1ba:	00 00       	nop
 1bc:	78 94       	sei
 1be:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 1c2:	8e bd       	out	0x2e, r24	; 46
 1c4:	ff cf       	rjmp	.-2      	; 0x1c4 <main+0x28>

Disassembly of section .text.__vector_17:

000001c6 <__vector_17>:
 1c6:	1f 92       	push	r1
 1c8:	0f 92       	push	r0
 1ca:	0f b6       	in	r0, 0x3f	; 63
 1cc:	0f 92       	push	r0
 1ce:	11 24       	eor	r1, r1
 1d0:	8f 93       	push	r24
 1d2:	8e b5       	in	r24, 0x2e	; 46
 1d4:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <rData>
 1d8:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 1dc:	8e bd       	out	0x2e, r24	; 46
 1de:	8f 91       	pop	r24
 1e0:	0f 90       	pop	r0
 1e2:	0f be       	out	0x3f, r0	; 63
 1e4:	0f 90       	pop	r0
 1e6:	1f 90       	pop	r1
 1e8:	18 95       	reti

Disassembly of section .text.__dummy_fini:

0000022c <_fini>:
 22c:	08 95       	ret

Disassembly of section .text.__dummy_funcs_on_exit:

0000022e <__funcs_on_exit>:
 22e:	08 95       	ret

Disassembly of section .text.__dummy_simulator_exit:

00000230 <__simulator_exit>:
 230:	08 95       	ret

Disassembly of section .text.exit:

00000208 <exit>:
 208:	ec 01       	movw	r28, r24
 20a:	0e 94 17 01 	call	0x22e	; 0x22e <__funcs_on_exit>
 20e:	0e 94 16 01 	call	0x22c	; 0x22c <_fini>
 212:	ce 01       	movw	r24, r28
 214:	0e 94 18 01 	call	0x230	; 0x230 <__simulator_exit>
 218:	ce 01       	movw	r24, r28
 21a:	0e 94 14 01 	call	0x228	; 0x228 <_Exit>

Disassembly of section .text._Exit:

00000228 <_Exit>:
 228:	0e 94 62 00 	call	0xc4	; 0xc4 <_exit>
