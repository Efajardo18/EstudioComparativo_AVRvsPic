

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Thu Mar 02 15:02:15 2023

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	text2,local,class=CODE,merge=1,delta=2
     9                           	psect	text3,local,class=CODE,merge=1,delta=2
    10                           	psect	text4,local,class=CODE,merge=1,delta=2
    11                           	psect	text5,local,class=CODE,merge=1,delta=2
    12                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    13                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    14                           	dabs	1,0x7E,2
    15  0000                     
    16                           ; Version 2.40
    17                           ; Generated 17/11/2021 GMT
    18                           ; 
    19                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution. Publication is not required when
    33                           ;        this file is used in an embedded application.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC16F887 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     	;# 
    52  0001                     	;# 
    53  0002                     	;# 
    54  0003                     	;# 
    55  0004                     	;# 
    56  0005                     	;# 
    57  0006                     	;# 
    58  0007                     	;# 
    59  0008                     	;# 
    60  0009                     	;# 
    61  000A                     	;# 
    62  000B                     	;# 
    63  000C                     	;# 
    64  000D                     	;# 
    65  000E                     	;# 
    66  000E                     	;# 
    67  000F                     	;# 
    68  0010                     	;# 
    69  0011                     	;# 
    70  0012                     	;# 
    71  0013                     	;# 
    72  0014                     	;# 
    73  0015                     	;# 
    74  0015                     	;# 
    75  0016                     	;# 
    76  0017                     	;# 
    77  0018                     	;# 
    78  0019                     	;# 
    79  001A                     	;# 
    80  001B                     	;# 
    81  001B                     	;# 
    82  001C                     	;# 
    83  001D                     	;# 
    84  001E                     	;# 
    85  001F                     	;# 
    86  0081                     	;# 
    87  0085                     	;# 
    88  0086                     	;# 
    89  0087                     	;# 
    90  0088                     	;# 
    91  0089                     	;# 
    92  008C                     	;# 
    93  008D                     	;# 
    94  008E                     	;# 
    95  008F                     	;# 
    96  0090                     	;# 
    97  0091                     	;# 
    98  0092                     	;# 
    99  0093                     	;# 
   100  0093                     	;# 
   101  0093                     	;# 
   102  0094                     	;# 
   103  0095                     	;# 
   104  0096                     	;# 
   105  0097                     	;# 
   106  0098                     	;# 
   107  0099                     	;# 
   108  009A                     	;# 
   109  009B                     	;# 
   110  009C                     	;# 
   111  009D                     	;# 
   112  009E                     	;# 
   113  009F                     	;# 
   114  0105                     	;# 
   115  0107                     	;# 
   116  0108                     	;# 
   117  0109                     	;# 
   118  010C                     	;# 
   119  010C                     	;# 
   120  010D                     	;# 
   121  010E                     	;# 
   122  010F                     	;# 
   123  0185                     	;# 
   124  0187                     	;# 
   125  0188                     	;# 
   126  0189                     	;# 
   127  018C                     	;# 
   128  018D                     	;# 
   129  0000                     	;# 
   130  0001                     	;# 
   131  0002                     	;# 
   132  0003                     	;# 
   133  0004                     	;# 
   134  0005                     	;# 
   135  0006                     	;# 
   136  0007                     	;# 
   137  0008                     	;# 
   138  0009                     	;# 
   139  000A                     	;# 
   140  000B                     	;# 
   141  000C                     	;# 
   142  000D                     	;# 
   143  000E                     	;# 
   144  000E                     	;# 
   145  000F                     	;# 
   146  0010                     	;# 
   147  0011                     	;# 
   148  0012                     	;# 
   149  0013                     	;# 
   150  0014                     	;# 
   151  0015                     	;# 
   152  0015                     	;# 
   153  0016                     	;# 
   154  0017                     	;# 
   155  0018                     	;# 
   156  0019                     	;# 
   157  001A                     	;# 
   158  001B                     	;# 
   159  001B                     	;# 
   160  001C                     	;# 
   161  001D                     	;# 
   162  001E                     	;# 
   163  001F                     	;# 
   164  0081                     	;# 
   165  0085                     	;# 
   166  0086                     	;# 
   167  0087                     	;# 
   168  0088                     	;# 
   169  0089                     	;# 
   170  008C                     	;# 
   171  008D                     	;# 
   172  008E                     	;# 
   173  008F                     	;# 
   174  0090                     	;# 
   175  0091                     	;# 
   176  0092                     	;# 
   177  0093                     	;# 
   178  0093                     	;# 
   179  0093                     	;# 
   180  0094                     	;# 
   181  0095                     	;# 
   182  0096                     	;# 
   183  0097                     	;# 
   184  0098                     	;# 
   185  0099                     	;# 
   186  009A                     	;# 
   187  009B                     	;# 
   188  009C                     	;# 
   189  009D                     	;# 
   190  009E                     	;# 
   191  009F                     	;# 
   192  0105                     	;# 
   193  0107                     	;# 
   194  0108                     	;# 
   195  0109                     	;# 
   196  010C                     	;# 
   197  010C                     	;# 
   198  010D                     	;# 
   199  010E                     	;# 
   200  010F                     	;# 
   201  0185                     	;# 
   202  0187                     	;# 
   203  0188                     	;# 
   204  0189                     	;# 
   205  018C                     	;# 
   206  018D                     	;# 
   207  0013                     _SSPBUF	set	19
   208  0014                     _SSPCON	set	20
   209  0094                     _SSPSTAT	set	148
   210  0093                     _SSPADD	set	147
   211  0091                     _SSPCON2	set	145
   212  0085                     _TRISA	set	133
   213  048A                     _PEN	set	1162
   214  0488                     _SEN	set	1160
   215  043C                     _TRISC4	set	1084
   216  043B                     _TRISC3	set	1083
   217                           
   218                           	psect	cinit
   219  07FC                     start_initialization:	
   220                           ; #config settings
   221                           
   222  07FC                     __initialization:
   223  07FC                     end_of_initialization:	
   224                           ;End of C runtime variable initialization code
   225                           
   226  07FC                     __end_of__initialization:
   227  07FC  0183               	clrf	3
   228  07FD  120A  118A  2FBF   	ljmp	_main	;jump to C main() function
   229                           
   230                           	psect	cstackCOMMON
   231  0070                     __pcstackCOMMON:
   232  0070                     ?_I2C_set:
   233  0070                     ?_I2C_start:	
   234                           ; 1 bytes @ 0x0
   235                           
   236  0070                     ??_I2C_start:	
   237                           ; 1 bytes @ 0x0
   238                           
   239  0070                     ?_I2C_write:	
   240                           ; 1 bytes @ 0x0
   241                           
   242  0070                     ?_I2C_stop:	
   243                           ; 1 bytes @ 0x0
   244                           
   245  0070                     ??_I2C_stop:	
   246                           ; 1 bytes @ 0x0
   247                           
   248  0070                     ?_main:	
   249                           ; 1 bytes @ 0x0
   250                           
   251  0070                     ?_I2C_wait:	
   252                           ; 1 bytes @ 0x0
   253                           
   254  0070                     ??_I2C_wait:	
   255                           ; 1 bytes @ 0x0
   256                           
   257  0070                     I2C_write@data:	
   258                           ; 1 bytes @ 0x0
   259                           
   260  0070                     I2C_set@clocks:	
   261                           ; 2 bytes @ 0x0
   262                           
   263                           
   264                           ; 4 bytes @ 0x0
   265  0070                     	ds	2
   266  0072                     ??_I2C_write:
   267                           
   268                           ; 1 bytes @ 0x2
   269  0072                     	ds	2
   270  0074                     ??_I2C_set:
   271  0074                     ??_main:	
   272                           ; 1 bytes @ 0x4
   273                           
   274                           
   275                           ; 1 bytes @ 0x4
   276  0074                     	ds	3
   277                           
   278                           	psect	maintext
   279  07BF                     __pmaintext:	
   280 ;;
   281 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   282 ;;
   283 ;; *************** function _main *****************
   284 ;; Defined at:
   285 ;;		line 43 in file "main.c"
   286 ;; Parameters:    Size  Location     Type
   287 ;;		None
   288 ;; Auto vars:     Size  Location     Type
   289 ;;		None
   290 ;; Return value:  Size  Location     Type
   291 ;;                  1    wreg      void 
   292 ;; Registers used:
   293 ;;		wreg, status,2, status,0, pclath, cstack
   294 ;; Tracked objects:
   295 ;;		On entry : B00/0
   296 ;;		On exit  : 0/0
   297 ;;		Unchanged: 0/0
   298 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   299 ;;      Params:         0       0       0       0       0
   300 ;;      Locals:         0       0       0       0       0
   301 ;;      Temps:          3       0       0       0       0
   302 ;;      Totals:         3       0       0       0       0
   303 ;;Total ram usage:        3 bytes
   304 ;; Hardware stack levels required when called: 2
   305 ;; This function calls:
   306 ;;		_I2C_set
   307 ;;		_I2C_start
   308 ;;		_I2C_stop
   309 ;;		_I2C_write
   310 ;; This function is called by:
   311 ;;		Startup code after reset
   312 ;; This function uses a non-reentrant model
   313 ;;
   314                           
   315  07BF                     _main:	
   316                           ;psect for function _main
   317                           
   318  07BF                     l700:	
   319                           ;incstack = 0
   320                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   321                           
   322                           
   323                           ;main.c: 44:     TRISA = 0;
   324  07BF  1683               	bsf	3,5	;RP0=1, select bank1
   325  07C0  1303               	bcf	3,6	;RP1=0, select bank1
   326  07C1  0185               	clrf	5	;volatile
   327  07C2                     l702:
   328                           
   329                           ;main.c: 45:     I2C_set(100);
   330  07C2  3000               	movlw	0
   331  07C3  00F3               	movwf	I2C_set@clocks+3
   332  07C4  3000               	movlw	0
   333  07C5  00F2               	movwf	I2C_set@clocks+2
   334  07C6  3000               	movlw	0
   335  07C7  00F1               	movwf	I2C_set@clocks+1
   336  07C8  3064               	movlw	100
   337  07C9  00F0               	movwf	I2C_set@clocks
   338  07CA  120A  118A  27AE  120A  118A  	fcall	_I2C_set
   339  07CF                     l704:
   340                           
   341                           ;main.c: 46:     _delay((unsigned long)((200)*(4000000/4000.0)));
   342  07CF  3002               	movlw	2
   343  07D0  00F6               	movwf	??_main+2
   344  07D1  3004               	movlw	4
   345  07D2  00F5               	movwf	??_main+1
   346  07D3  30BA               	movlw	186
   347  07D4  00F4               	movwf	??_main
   348  07D5                     u37:
   349  07D5  0BF4               	decfsz	??_main,f
   350  07D6  2FD5               	goto	u37
   351  07D7  0BF5               	decfsz	??_main+1,f
   352  07D8  2FD5               	goto	u37
   353  07D9  0BF6               	decfsz	??_main+2,f
   354  07DA  2FD5               	goto	u37
   355  07DB  0000               	nop
   356  07DC                     l706:
   357                           
   358                           ;main.c: 48:         I2C_start();
   359  07DC  120A  118A  2785  120A  118A  	fcall	_I2C_start
   360  07E1                     l708:
   361                           
   362                           ;main.c: 49:         I2C_write(0x26);
   363  07E1  3026               	movlw	38
   364  07E2  00F0               	movwf	I2C_write@data
   365  07E3  3000               	movlw	0
   366  07E4  00F1               	movwf	I2C_write@data+1
   367  07E5  120A  118A  2797  120A  118A  	fcall	_I2C_write
   368  07EA                     l710:
   369                           
   370                           ;main.c: 50:         I2C_write(0xAA);
   371  07EA  30AA               	movlw	170
   372  07EB  00F0               	movwf	I2C_write@data
   373  07EC  3000               	movlw	0
   374  07ED  00F1               	movwf	I2C_write@data+1
   375  07EE  120A  118A  2797  120A  118A  	fcall	_I2C_write
   376  07F3                     l712:
   377                           
   378                           ;main.c: 51:         I2C_stop();
   379  07F3  120A  118A  278E  120A  118A  	fcall	_I2C_stop
   380  07F8  2FDC               	goto	l706
   381  07F9  120A  118A  2800   	ljmp	start
   382  07FC                     __end_of_main:
   383                           
   384                           	psect	text1
   385  0797                     __ptext1:	
   386 ;; *************** function _I2C_write *****************
   387 ;; Defined at:
   388 ;;		line 81 in file "main.c"
   389 ;; Parameters:    Size  Location     Type
   390 ;;  data            2    0[COMMON] unsigned int 
   391 ;; Auto vars:     Size  Location     Type
   392 ;;		None
   393 ;; Return value:  Size  Location     Type
   394 ;;                  1    wreg      void 
   395 ;; Registers used:
   396 ;;		wreg, status,2, status,0, pclath, cstack
   397 ;; Tracked objects:
   398 ;;		On entry : 0/0
   399 ;;		On exit  : 0/0
   400 ;;		Unchanged: 0/0
   401 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   402 ;;      Params:         2       0       0       0       0
   403 ;;      Locals:         0       0       0       0       0
   404 ;;      Temps:          0       0       0       0       0
   405 ;;      Totals:         2       0       0       0       0
   406 ;;Total ram usage:        2 bytes
   407 ;; Hardware stack levels used: 1
   408 ;; Hardware stack levels required when called: 1
   409 ;; This function calls:
   410 ;;		_I2C_wait
   411 ;; This function is called by:
   412 ;;		_main
   413 ;; This function uses a non-reentrant model
   414 ;;
   415                           
   416  0797                     _I2C_write:	
   417                           ;psect for function _I2C_write
   418                           
   419  0797                     l696:	
   420                           ;incstack = 0
   421                           ; Regs used in _I2C_write: [wreg+status,2+status,0+pclath+cstack]
   422                           
   423                           
   424                           ;main.c: 82:     I2C_wait();
   425  0797  120A  118A  27A1  120A  118A  	fcall	_I2C_wait
   426  079C                     l698:
   427                           
   428                           ;main.c: 83:     SSPBUF = data;
   429  079C  0870               	movf	I2C_write@data,w
   430  079D  1283               	bcf	3,5	;RP0=0, select bank0
   431  079E  1303               	bcf	3,6	;RP1=0, select bank0
   432  079F  0093               	movwf	19	;volatile
   433  07A0                     l56:
   434  07A0  0008               	return
   435  07A1                     __end_of_I2C_write:
   436                           
   437                           	psect	text2
   438  078E                     __ptext2:	
   439 ;; *************** function _I2C_stop *****************
   440 ;; Defined at:
   441 ;;		line 76 in file "main.c"
   442 ;; Parameters:    Size  Location     Type
   443 ;;		None
   444 ;; Auto vars:     Size  Location     Type
   445 ;;		None
   446 ;; Return value:  Size  Location     Type
   447 ;;                  1    wreg      void 
   448 ;; Registers used:
   449 ;;		wreg, status,2, status,0, pclath, cstack
   450 ;; Tracked objects:
   451 ;;		On entry : 0/0
   452 ;;		On exit  : 0/0
   453 ;;		Unchanged: 0/0
   454 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   455 ;;      Params:         0       0       0       0       0
   456 ;;      Locals:         0       0       0       0       0
   457 ;;      Temps:          0       0       0       0       0
   458 ;;      Totals:         0       0       0       0       0
   459 ;;Total ram usage:        0 bytes
   460 ;; Hardware stack levels used: 1
   461 ;; Hardware stack levels required when called: 1
   462 ;; This function calls:
   463 ;;		_I2C_wait
   464 ;; This function is called by:
   465 ;;		_main
   466 ;; This function uses a non-reentrant model
   467 ;;
   468                           
   469  078E                     _I2C_stop:	
   470                           ;psect for function _I2C_stop
   471                           
   472  078E                     l670:	
   473                           ;incstack = 0
   474                           ; Regs used in _I2C_stop: [wreg+status,2+status,0+pclath+cstack]
   475                           
   476                           
   477                           ;main.c: 77:     I2C_wait();
   478  078E  120A  118A  27A1  120A  118A  	fcall	_I2C_wait
   479  0793                     l672:
   480                           
   481                           ;main.c: 78:     PEN = 1;
   482  0793  1683               	bsf	3,5	;RP0=1, select bank1
   483  0794  1303               	bcf	3,6	;RP1=0, select bank1
   484  0795  1511               	bsf	17,2	;volatile
   485  0796                     l53:
   486  0796  0008               	return
   487  0797                     __end_of_I2C_stop:
   488                           
   489                           	psect	text3
   490  0785                     __ptext3:	
   491 ;; *************** function _I2C_start *****************
   492 ;; Defined at:
   493 ;;		line 71 in file "main.c"
   494 ;; Parameters:    Size  Location     Type
   495 ;;		None
   496 ;; Auto vars:     Size  Location     Type
   497 ;;		None
   498 ;; Return value:  Size  Location     Type
   499 ;;                  1    wreg      void 
   500 ;; Registers used:
   501 ;;		wreg, status,2, status,0, pclath, cstack
   502 ;; Tracked objects:
   503 ;;		On entry : 0/0
   504 ;;		On exit  : 0/0
   505 ;;		Unchanged: 0/0
   506 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   507 ;;      Params:         0       0       0       0       0
   508 ;;      Locals:         0       0       0       0       0
   509 ;;      Temps:          0       0       0       0       0
   510 ;;      Totals:         0       0       0       0       0
   511 ;;Total ram usage:        0 bytes
   512 ;; Hardware stack levels used: 1
   513 ;; Hardware stack levels required when called: 1
   514 ;; This function calls:
   515 ;;		_I2C_wait
   516 ;; This function is called by:
   517 ;;		_main
   518 ;; This function uses a non-reentrant model
   519 ;;
   520                           
   521  0785                     _I2C_start:	
   522                           ;psect for function _I2C_start
   523                           
   524  0785                     l662:	
   525                           ;incstack = 0
   526                           ; Regs used in _I2C_start: [wreg+status,2+status,0+pclath+cstack]
   527                           
   528                           
   529                           ;main.c: 72:     I2C_wait();
   530  0785  120A  118A  27A1  120A  118A  	fcall	_I2C_wait
   531  078A                     l664:
   532                           
   533                           ;main.c: 73:     SEN = 1;
   534  078A  1683               	bsf	3,5	;RP0=1, select bank1
   535  078B  1303               	bcf	3,6	;RP1=0, select bank1
   536  078C  1411               	bsf	17,0	;volatile
   537  078D                     l50:
   538  078D  0008               	return
   539  078E                     __end_of_I2C_start:
   540                           
   541                           	psect	text4
   542  07A1                     __ptext4:	
   543 ;; *************** function _I2C_wait *****************
   544 ;; Defined at:
   545 ;;		line 67 in file "main.c"
   546 ;; Parameters:    Size  Location     Type
   547 ;;		None
   548 ;; Auto vars:     Size  Location     Type
   549 ;;		None
   550 ;; Return value:  Size  Location     Type
   551 ;;                  1    wreg      void 
   552 ;; Registers used:
   553 ;;		wreg, status,2
   554 ;; Tracked objects:
   555 ;;		On entry : 0/0
   556 ;;		On exit  : 0/0
   557 ;;		Unchanged: 0/0
   558 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   559 ;;      Params:         0       0       0       0       0
   560 ;;      Locals:         0       0       0       0       0
   561 ;;      Temps:          0       0       0       0       0
   562 ;;      Totals:         0       0       0       0       0
   563 ;;Total ram usage:        0 bytes
   564 ;; Hardware stack levels used: 1
   565 ;; This function calls:
   566 ;;		Nothing
   567 ;; This function is called by:
   568 ;;		_I2C_start
   569 ;;		_I2C_stop
   570 ;;		_I2C_write
   571 ;; This function uses a non-reentrant model
   572 ;;
   573                           
   574  07A1                     _I2C_wait:	
   575                           ;psect for function _I2C_wait
   576                           
   577  07A1                     l648:	
   578                           ;incstack = 0
   579                           ; Regs used in _I2C_wait: [wreg+status,2]
   580                           
   581  07A1                     l650:	
   582                           ;main.c: 68:     while ( (SSPCON2 & 0b00011111) || (SSPSTAT & 0b00000100) );
   583                           
   584  07A1  1683               	bsf	3,5	;RP0=1, select bank1
   585  07A2  1303               	bcf	3,6	;RP1=0, select bank1
   586  07A3  0811               	movf	17,w	;volatile
   587  07A4  391F               	andlw	31
   588  07A5  1D03               	btfss	3,2
   589  07A6  2FA8               	goto	u11
   590  07A7  2FA9               	goto	u10
   591  07A8                     u11:
   592  07A8  2FA1               	goto	l650
   593  07A9                     u10:
   594  07A9                     l652:
   595  07A9  1914               	btfsc	20,2	;volatile
   596  07AA  2FAC               	goto	u21
   597  07AB  2FAD               	goto	u20
   598  07AC                     u21:
   599  07AC  2FA1               	goto	l650
   600  07AD                     u20:
   601  07AD                     l47:
   602  07AD  0008               	return
   603  07AE                     __end_of_I2C_wait:
   604                           
   605                           	psect	text5
   606  07AE                     __ptext5:	
   607 ;; *************** function _I2C_set *****************
   608 ;; Defined at:
   609 ;;		line 56 in file "main.c"
   610 ;; Parameters:    Size  Location     Type
   611 ;;  clocks          4    0[COMMON] const unsigned long 
   612 ;; Auto vars:     Size  Location     Type
   613 ;;		None
   614 ;; Return value:  Size  Location     Type
   615 ;;                  1    wreg      void 
   616 ;; Registers used:
   617 ;;		wreg, status,2
   618 ;; Tracked objects:
   619 ;;		On entry : 0/0
   620 ;;		On exit  : 0/0
   621 ;;		Unchanged: 0/0
   622 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   623 ;;      Params:         4       0       0       0       0
   624 ;;      Locals:         0       0       0       0       0
   625 ;;      Temps:          0       0       0       0       0
   626 ;;      Totals:         4       0       0       0       0
   627 ;;Total ram usage:        4 bytes
   628 ;; Hardware stack levels used: 1
   629 ;; This function calls:
   630 ;;		Nothing
   631 ;; This function is called by:
   632 ;;		_main
   633 ;; This function uses a non-reentrant model
   634 ;;
   635                           
   636  07AE                     _I2C_set:	
   637                           ;psect for function _I2C_set
   638                           
   639  07AE                     l688:	
   640                           ;incstack = 0
   641                           ; Regs used in _I2C_set: [wreg+status,2]
   642                           
   643                           
   644                           ;main.c: 57:     TRISC3 = 1;
   645  07AE  1683               	bsf	3,5	;RP0=1, select bank1
   646  07AF  1303               	bcf	3,6	;RP1=0, select bank1
   647  07B0  1587               	bsf	7,3	;volatile
   648                           
   649                           ;main.c: 58:     TRISC4 = 1;
   650  07B1  1607               	bsf	7,4	;volatile
   651  07B2                     l690:
   652                           
   653                           ;main.c: 59:     SSPCON = 0b00001000;
   654  07B2  3008               	movlw	8
   655  07B3  1283               	bcf	3,5	;RP0=0, select bank0
   656  07B4  1303               	bcf	3,6	;RP1=0, select bank0
   657  07B5  0094               	movwf	20	;volatile
   658                           
   659                           ;main.c: 60:     SSPCON = 0b00101000;
   660  07B6  3028               	movlw	40
   661  07B7  0094               	movwf	20	;volatile
   662  07B8                     l692:
   663                           
   664                           ;main.c: 61:     SSPCON2 = 0b00000000;
   665  07B8  1683               	bsf	3,5	;RP0=1, select bank1
   666  07B9  1303               	bcf	3,6	;RP1=0, select bank1
   667  07BA  0191               	clrf	17	;volatile
   668  07BB                     l694:
   669                           
   670                           ;main.c: 62:     SSPADD = 0b00001001;
   671  07BB  3009               	movlw	9
   672  07BC  0093               	movwf	19	;volatile
   673                           
   674                           ;main.c: 64:     SSPSTAT = 0b00000000;
   675  07BD  0194               	clrf	20	;volatile
   676  07BE                     l41:
   677  07BE  0008               	return
   678  07BF                     __end_of_I2C_set:
   679  007E                     btemp	set	126	;btemp
   680  007E                     wtemp0	set	126
   681                           
   682                           	psect	idloc
   683                           
   684                           ;Config register IDLOC0 @ 0x2000
   685                           ;	unspecified, using default values
   686  2000                     	org	8192
   687  2000  3FFF               	dw	16383
   688                           
   689                           ;Config register IDLOC1 @ 0x2001
   690                           ;	unspecified, using default values
   691  2001                     	org	8193
   692  2001  3FFF               	dw	16383
   693                           
   694                           ;Config register IDLOC2 @ 0x2002
   695                           ;	unspecified, using default values
   696  2002                     	org	8194
   697  2002  3FFF               	dw	16383
   698                           
   699                           ;Config register IDLOC3 @ 0x2003
   700                           ;	unspecified, using default values
   701  2003                     	org	8195
   702  2003  3FFF               	dw	16383
   703                           
   704                           	psect	config
   705                           
   706                           ;Config register CONFIG1 @ 0x2007
   707                           ;	Oscillator Selection bits
   708                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
   709                           ;	Watchdog Timer Enable bit
   710                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   711                           ;	Power-up Timer Enable bit
   712                           ;	PWRTE = OFF, PWRT disabled
   713                           ;	RE3/MCLR pin function select bit
   714                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
   715                           ;	Code Protection bit
   716                           ;	CP = OFF, Program memory code protection is disabled
   717                           ;	Data Code Protection bit
   718                           ;	CPD = OFF, Data memory code protection is disabled
   719                           ;	Brown Out Reset Selection bits
   720                           ;	BOREN = OFF, BOR disabled
   721                           ;	Internal External Switchover bit
   722                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   723                           ;	Fail-Safe Clock Monitor Enabled bit
   724                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   725                           ;	Low Voltage Programming Enable bit
   726                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   727                           ;	In-Circuit Debugger Mode bit
   728                           ;	DEBUG = 0x1, unprogrammed default
   729  2007                     	org	8199
   730  2007  20D4               	dw	8404
   731                           
   732                           ;Config register CONFIG2 @ 0x2008
   733                           ;	Brown-out Reset Selection bit
   734                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   735                           ;	Flash Program Memory Self Write Enable bits
   736                           ;	WRT = OFF, Write protection off
   737  2008                     	org	8200
   738  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7       7
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_I2C_set

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     250
                                              4 COMMON     3     3      0
                            _I2C_set
                          _I2C_start
                           _I2C_stop
                          _I2C_write
 ---------------------------------------------------------------------------------
 (1) _I2C_write                                            2     0      2     174
                                              0 COMMON     2     0      2
                           _I2C_wait
 ---------------------------------------------------------------------------------
 (1) _I2C_stop                                             0     0      0       0
                           _I2C_wait
 ---------------------------------------------------------------------------------
 (1) _I2C_start                                            0     0      0       0
                           _I2C_wait
 ---------------------------------------------------------------------------------
 (2) _I2C_wait                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_set                                              4     0      4      76
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_set
   _I2C_start
     _I2C_wait
   _I2C_stop
     _I2C_wait
   _I2C_write
     _I2C_wait

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       7       1       50.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Thu Mar 02 15:02:15 2023

                     l41 07BE                       l50 078D                       l53 0796  
                     l47 07AD                       l56 07A0                       u10 07A9  
                     u11 07A8                       u20 07AD                       u21 07AC  
                     u37 07D5                      l700 07BF                      l710 07EA  
                    l702 07C2                      l712 07F3                      l704 07CF  
                    l650 07A1                      l706 07DC                      l652 07A9  
                    l708 07E1                      l662 0785                      l670 078E  
                    l648 07A1                      l664 078A                      l672 0793  
                    l690 07B2                      l692 07B8                      l694 07BB  
                    l688 07AE                      l696 0797                      l698 079C  
                    _PEN 048A                      _SEN 0488          __end_of_I2C_set 07BF  
                   _main 07BF                     btemp 007E         __end_of_I2C_wait 07AE  
                   start 0000         __end_of_I2C_stop 0797            I2C_write@data 0070  
                  ?_main 0070                    _TRISA 0085                    status 0003  
      __end_of_I2C_start 078E                    wtemp0 007E        __end_of_I2C_write 07A1  
        __initialization 07FC             __end_of_main 07FC                ??_I2C_set 0074  
                 ??_main 0074                   _SSPADD 0093                   _TRISC3 043B  
                 _TRISC4 043C                   _SSPCON 0014                   _SSPBUF 0013  
              ?_I2C_wait 0070                ?_I2C_stop 0070  __end_of__initialization 07FC  
         __pcstackCOMMON 0070               ??_I2C_wait 0070               ??_I2C_stop 0070  
             __pmaintext 07BF                  _I2C_set 07AE                  _SSPCON2 0091  
                _SSPSTAT 0094                _I2C_start 0785                _I2C_write 0797  
                __ptext1 0797                  __ptext2 078E                  __ptext3 0785  
                __ptext4 07A1                  __ptext5 07AE     end_of_initialization 07FC  
             ?_I2C_start 0070               ?_I2C_write 0070      start_initialization 07FC  
            ??_I2C_start 0070              ??_I2C_write 0072                 ?_I2C_set 0070  
              ___latbits 0002                 _I2C_wait 07A1                 _I2C_stop 078E  
          I2C_set@clocks 0070  
