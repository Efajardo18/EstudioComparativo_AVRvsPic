

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Thu Mar 02 15:40:55 2023

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	intentry,global,class=CODE,delta=2
    16                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    17                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    18                           	dabs	1,0x7E,2
    19  0000                     
    20                           ; Version 2.40
    21                           ; Generated 17/11/2021 GMT
    22                           ; 
    23                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution. Publication is not required when
    37                           ;        this file is used in an embedded application.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC16F887 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55  0000                     	;# 
    56  0001                     	;# 
    57  0002                     	;# 
    58  0003                     	;# 
    59  0004                     	;# 
    60  0005                     	;# 
    61  0006                     	;# 
    62  0007                     	;# 
    63  0008                     	;# 
    64  0009                     	;# 
    65  000A                     	;# 
    66  000B                     	;# 
    67  000C                     	;# 
    68  000D                     	;# 
    69  000E                     	;# 
    70  000E                     	;# 
    71  000F                     	;# 
    72  0010                     	;# 
    73  0011                     	;# 
    74  0012                     	;# 
    75  0013                     	;# 
    76  0014                     	;# 
    77  0015                     	;# 
    78  0015                     	;# 
    79  0016                     	;# 
    80  0017                     	;# 
    81  0018                     	;# 
    82  0019                     	;# 
    83  001A                     	;# 
    84  001B                     	;# 
    85  001B                     	;# 
    86  001C                     	;# 
    87  001D                     	;# 
    88  001E                     	;# 
    89  001F                     	;# 
    90  0081                     	;# 
    91  0085                     	;# 
    92  0086                     	;# 
    93  0087                     	;# 
    94  0088                     	;# 
    95  0089                     	;# 
    96  008C                     	;# 
    97  008D                     	;# 
    98  008E                     	;# 
    99  008F                     	;# 
   100  0090                     	;# 
   101  0091                     	;# 
   102  0092                     	;# 
   103  0093                     	;# 
   104  0093                     	;# 
   105  0093                     	;# 
   106  0094                     	;# 
   107  0095                     	;# 
   108  0096                     	;# 
   109  0097                     	;# 
   110  0098                     	;# 
   111  0099                     	;# 
   112  009A                     	;# 
   113  009B                     	;# 
   114  009C                     	;# 
   115  009D                     	;# 
   116  009E                     	;# 
   117  009F                     	;# 
   118  0105                     	;# 
   119  0107                     	;# 
   120  0108                     	;# 
   121  0109                     	;# 
   122  010C                     	;# 
   123  010C                     	;# 
   124  010D                     	;# 
   125  010E                     	;# 
   126  010F                     	;# 
   127  0185                     	;# 
   128  0187                     	;# 
   129  0188                     	;# 
   130  0189                     	;# 
   131  018C                     	;# 
   132  018D                     	;# 
   133  0000                     	;# 
   134  0001                     	;# 
   135  0002                     	;# 
   136  0003                     	;# 
   137  0004                     	;# 
   138  0005                     	;# 
   139  0006                     	;# 
   140  0007                     	;# 
   141  0008                     	;# 
   142  0009                     	;# 
   143  000A                     	;# 
   144  000B                     	;# 
   145  000C                     	;# 
   146  000D                     	;# 
   147  000E                     	;# 
   148  000E                     	;# 
   149  000F                     	;# 
   150  0010                     	;# 
   151  0011                     	;# 
   152  0012                     	;# 
   153  0013                     	;# 
   154  0014                     	;# 
   155  0015                     	;# 
   156  0015                     	;# 
   157  0016                     	;# 
   158  0017                     	;# 
   159  0018                     	;# 
   160  0019                     	;# 
   161  001A                     	;# 
   162  001B                     	;# 
   163  001B                     	;# 
   164  001C                     	;# 
   165  001D                     	;# 
   166  001E                     	;# 
   167  001F                     	;# 
   168  0081                     	;# 
   169  0085                     	;# 
   170  0086                     	;# 
   171  0087                     	;# 
   172  0088                     	;# 
   173  0089                     	;# 
   174  008C                     	;# 
   175  008D                     	;# 
   176  008E                     	;# 
   177  008F                     	;# 
   178  0090                     	;# 
   179  0091                     	;# 
   180  0092                     	;# 
   181  0093                     	;# 
   182  0093                     	;# 
   183  0093                     	;# 
   184  0094                     	;# 
   185  0095                     	;# 
   186  0096                     	;# 
   187  0097                     	;# 
   188  0098                     	;# 
   189  0099                     	;# 
   190  009A                     	;# 
   191  009B                     	;# 
   192  009C                     	;# 
   193  009D                     	;# 
   194  009E                     	;# 
   195  009F                     	;# 
   196  0105                     	;# 
   197  0107                     	;# 
   198  0108                     	;# 
   199  0109                     	;# 
   200  010C                     	;# 
   201  010C                     	;# 
   202  010D                     	;# 
   203  010E                     	;# 
   204  010F                     	;# 
   205  0185                     	;# 
   206  0187                     	;# 
   207  0188                     	;# 
   208  0189                     	;# 
   209  018C                     	;# 
   210  018D                     	;# 
   211                           
   212                           	psect	idataCOMMON
   213  0163                     __pidataCOMMON:
   214                           
   215                           ;initializer for _rData
   216  0163  34AA               	retlw	170
   217                           
   218                           ;initializer for _tData
   219  0164  3432               	retlw	50
   220  0006                     _PORTBbits	set	6
   221  0014                     _SSPCONbits	set	20
   222  0006                     _PORTB	set	6
   223  000C                     _PIR1bits	set	12
   224  0005                     _PORTA	set	5
   225  0013                     _SSPBUF	set	19
   226  000C                     _PIR1	set	12
   227  000B                     _INTCON	set	11
   228  0014                     _SSPCON	set	20
   229  0063                     _SSPIF	set	99
   230  0094                     _SSPSTATbits	set	148
   231  0086                     _TRISB	set	134
   232  008C                     _PIE1	set	140
   233  008C                     _PIE1bits	set	140
   234  0094                     _SSPSTAT	set	148
   235  0093                     _SSPADD	set	147
   236  0091                     _SSPCON2	set	145
   237  0087                     _TRISC	set	135
   238  008F                     _OSCCON	set	143
   239  008F                     _OSCCONbits	set	143
   240  04A0                     _BF	set	1184
   241  043C                     _TRISC4	set	1084
   242  043B                     _TRISC3	set	1083
   243                           
   244                           	psect	cinit
   245  000F                     start_initialization:	
   246                           ; #config settings
   247                           
   248  000F                     __initialization:
   249                           
   250                           ; Initialize objects allocated to COMMON
   251  000F  120A  118A  2163  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   252  0014  00F8               	movwf	__pdataCOMMON& (0+127)
   253  0015  120A  118A  2164  120A  118A  	fcall	__pidataCOMMON+1	;fetch initializer
   254  001A  00F9               	movwf	(__pdataCOMMON+1)& (0+127)
   255                           
   256                           ; Clear objects allocated to COMMON
   257  001B  01F6               	clrf	__pbssCOMMON& (0+127)
   258  001C  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   259  001D                     end_of_initialization:	
   260                           ;End of C runtime variable initialization code
   261                           
   262  001D                     __end_of__initialization:
   263  001D  0183               	clrf	3
   264  001E  120A  118A  2936   	ljmp	_main	;jump to C main() function
   265                           
   266                           	psect	bssCOMMON
   267  0076                     __pbssCOMMON:
   268  0076                     _z:
   269  0076                     	ds	2
   270                           
   271                           	psect	dataCOMMON
   272  0078                     __pdataCOMMON:
   273  0078                     _rData:
   274  0078                     	ds	1
   275  0079                     _tData:
   276  0079                     	ds	1
   277                           
   278                           	psect	cstackCOMMON
   279  0070                     __pcstackCOMMON:
   280  0070                     ?_IO_set:
   281  0070                     ?_main:	
   282                           ; 1 bytes @ 0x0
   283                           
   284  0070                     ?_I2C_Slave_Read:	
   285                           ; 1 bytes @ 0x0
   286                           
   287  0070                     ??_I2C_Slave_Read:	
   288                           ; 1 bytes @ 0x0
   289                           
   290                           
   291                           ; 1 bytes @ 0x0
   292  0070                     	ds	4
   293  0074                     ??_IO_set:
   294  0074                     ?_OSC_set:	
   295                           ; 1 bytes @ 0x4
   296                           
   297  0074                     ??_I2CPIC_Sset:	
   298                           ; 1 bytes @ 0x4
   299                           
   300  0074                     OSC_set@InternalOsc:	
   301                           ; 1 bytes @ 0x4
   302                           
   303                           
   304                           ; 1 bytes @ 0x4
   305  0074                     	ds	1
   306  0075                     ??_OSC_set:
   307                           
   308                           ; 1 bytes @ 0x5
   309  0075                     	ds	1
   310                           
   311                           	psect	cstackBANK0
   312  0020                     __pcstackBANK0:
   313  0020                     ?_I2CPIC_Sset:
   314  0020                     OSC_set@FreqClockSelect:	
   315                           ; 1 bytes @ 0x0
   316                           
   317  0020                     I2CPIC_Sset@IntEnable:	
   318                           ; 1 bytes @ 0x0
   319                           
   320                           
   321                           ; 2 bytes @ 0x0
   322  0020                     	ds	2
   323  0022                     I2CPIC_Sset@SlaveAdd:
   324                           
   325                           ; 1 bytes @ 0x2
   326  0022                     	ds	1
   327  0023                     I2CPIC_Sset@addressSize:
   328                           
   329                           ; 1 bytes @ 0x3
   330  0023                     	ds	1
   331  0024                     I2CPIC_Sset@StartStopInt:
   332                           
   333                           ; 2 bytes @ 0x4
   334  0024                     	ds	2
   335  0026                     ??_main:
   336                           
   337                           ; 1 bytes @ 0x6
   338  0026                     	ds	2
   339                           
   340                           	psect	maintext
   341  0136                     __pmaintext:	
   342 ;;
   343 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   344 ;;
   345 ;; *************** function _main *****************
   346 ;; Defined at:
   347 ;;		line 46 in file "main.c"
   348 ;; Parameters:    Size  Location     Type
   349 ;;		None
   350 ;; Auto vars:     Size  Location     Type
   351 ;;		None
   352 ;; Return value:  Size  Location     Type
   353 ;;                  1    wreg      void 
   354 ;; Registers used:
   355 ;;		wreg, status,2, status,0, pclath, cstack
   356 ;; Tracked objects:
   357 ;;		On entry : B00/0
   358 ;;		On exit  : 0/0
   359 ;;		Unchanged: 0/0
   360 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   361 ;;      Params:         0       0       0       0       0
   362 ;;      Locals:         0       0       0       0       0
   363 ;;      Temps:          0       2       0       0       0
   364 ;;      Totals:         0       2       0       0       0
   365 ;;Total ram usage:        2 bytes
   366 ;; Hardware stack levels required when called: 2
   367 ;; This function calls:
   368 ;;		_I2CPIC_Sset
   369 ;;		_IO_set
   370 ;;		_OSC_set
   371 ;; This function is called by:
   372 ;;		Startup code after reset
   373 ;; This function uses a non-reentrant model
   374 ;;
   375                           
   376  0136                     _main:	
   377                           ;psect for function _main
   378                           
   379  0136                     l1027:	
   380                           ;incstack = 0
   381                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   382                           
   383                           
   384                           ;main.c: 47:     OSC_set(7,0);
   385  0136  01F4               	clrf	OSC_set@InternalOsc
   386  0137  3007               	movlw	7
   387  0138  120A  118A  2021  120A  118A  	fcall	_OSC_set
   388  013D                     l1029:
   389                           
   390                           ;main.c: 48:     IO_set();
   391  013D  120A  118A  215C  120A  118A  	fcall	_IO_set
   392  0142                     l1031:
   393                           
   394                           ;main.c: 49:     I2CPIC_Sset(1, 0x13, 0b00000110, 0);
   395  0142  3001               	movlw	1
   396  0143  1283               	bcf	3,5	;RP0=0, select bank0
   397  0144  1303               	bcf	3,6	;RP1=0, select bank0
   398  0145  00A0               	movwf	I2CPIC_Sset@IntEnable
   399  0146  3000               	movlw	0
   400  0147  00A1               	movwf	I2CPIC_Sset@IntEnable+1
   401  0148  3013               	movlw	19
   402  0149  00A6               	movwf	??_main
   403  014A  0826               	movf	??_main,w
   404  014B  00A2               	movwf	I2CPIC_Sset@SlaveAdd
   405  014C  3006               	movlw	6
   406  014D  00A7               	movwf	??_main+1
   407  014E  0827               	movf	??_main+1,w
   408  014F  00A3               	movwf	I2CPIC_Sset@addressSize
   409  0150  3000               	movlw	0
   410  0151  00A4               	movwf	I2CPIC_Sset@StartStopInt
   411  0152  00A5               	movwf	I2CPIC_Sset@StartStopInt+1
   412  0153  120A  118A  210C  120A  118A  	fcall	_I2CPIC_Sset
   413  0158                     l123:	
   414                           ;main.c: 50:     while(1)
   415                           
   416  0158                     l124:	
   417                           ;main.c: 51:     {;main.c: 53:     }
   418                           
   419  0158  2958               	goto	l123
   420  0159  120A  118A  280C   	ljmp	start
   421  015C                     __end_of_main:
   422                           
   423                           	psect	text1
   424  0021                     __ptext1:	
   425 ;; *************** function _OSC_set *****************
   426 ;; Defined at:
   427 ;;		line 24 in file "./PICOSC.h"
   428 ;; Parameters:    Size  Location     Type
   429 ;;  FreqClockSel    1    wreg     unsigned char 
   430 ;;  InternalOsc     1    4[COMMON] unsigned char 
   431 ;; Auto vars:     Size  Location     Type
   432 ;;  FreqClockSel    1    0[BANK0 ] unsigned char 
   433 ;; Return value:  Size  Location     Type
   434 ;;                  1    wreg      void 
   435 ;; Registers used:
   436 ;;		wreg, status,2, status,0
   437 ;; Tracked objects:
   438 ;;		On entry : 0/0
   439 ;;		On exit  : 0/0
   440 ;;		Unchanged: 0/0
   441 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   442 ;;      Params:         1       0       0       0       0
   443 ;;      Locals:         0       1       0       0       0
   444 ;;      Temps:          1       0       0       0       0
   445 ;;      Totals:         2       1       0       0       0
   446 ;;Total ram usage:        3 bytes
   447 ;; Hardware stack levels used: 1
   448 ;; Hardware stack levels required when called: 1
   449 ;; This function calls:
   450 ;;		Nothing
   451 ;; This function is called by:
   452 ;;		_main
   453 ;; This function uses a non-reentrant model
   454 ;;
   455                           
   456  0021                     _OSC_set:	
   457                           ;psect for function _OSC_set
   458                           
   459                           
   460                           ;incstack = 0
   461                           ; Regs used in _OSC_set: [wreg+status,2+status,0]
   462                           ;OSC_set@FreqClockSelect stored from wreg
   463  0021  1283               	bcf	3,5	;RP0=0, select bank0
   464  0022  1303               	bcf	3,6	;RP1=0, select bank0
   465  0023  00A0               	movwf	OSC_set@FreqClockSelect
   466  0024                     l971:
   467                           
   468                           ;./PICOSC.h: 25:     if (FreqClockSelect == 7){
   469  0024  3007               	movlw	7
   470  0025  0620               	xorwf	OSC_set@FreqClockSelect,w
   471  0026  1D03               	btfss	3,2
   472  0027  2829               	goto	u431
   473  0028  282A               	goto	u430
   474  0029                     u431:
   475  0029  282F               	goto	l975
   476  002A                     u430:
   477  002A                     l973:
   478                           
   479                           ;./PICOSC.h: 26:         OSCCONbits.IRCF = 7;
   480  002A  3070               	movlw	112
   481  002B  1683               	bsf	3,5	;RP0=1, select bank1
   482  002C  1303               	bcf	3,6	;RP1=0, select bank1
   483  002D  048F               	iorwf	15,f	;volatile
   484                           
   485                           ;./PICOSC.h: 27:     }
   486  002E  2886               	goto	l52
   487  002F                     l975:
   488  002F  3006               	movlw	6
   489  0030  0620               	xorwf	OSC_set@FreqClockSelect,w
   490  0031  1D03               	btfss	3,2
   491  0032  2834               	goto	u441
   492  0033  2835               	goto	u440
   493  0034                     u441:
   494  0034  283C               	goto	l979
   495  0035                     u440:
   496  0035                     l977:
   497                           
   498                           ;./PICOSC.h: 29:         OSCCONbits.IRCF = 6;
   499  0035  1683               	bsf	3,5	;RP0=1, select bank1
   500  0036  1303               	bcf	3,6	;RP1=0, select bank1
   501  0037  080F               	movf	15,w	;volatile
   502  0038  398F               	andlw	-113
   503  0039  3860               	iorlw	96
   504  003A  008F               	movwf	15	;volatile
   505                           
   506                           ;./PICOSC.h: 30:     }
   507  003B  2886               	goto	l52
   508  003C                     l979:
   509  003C  3005               	movlw	5
   510  003D  0620               	xorwf	OSC_set@FreqClockSelect,w
   511  003E  1D03               	btfss	3,2
   512  003F  2841               	goto	u451
   513  0040  2842               	goto	u450
   514  0041                     u451:
   515  0041  2849               	goto	l983
   516  0042                     u450:
   517  0042                     l981:
   518                           
   519                           ;./PICOSC.h: 32:         OSCCONbits.IRCF = 5;
   520  0042  1683               	bsf	3,5	;RP0=1, select bank1
   521  0043  1303               	bcf	3,6	;RP1=0, select bank1
   522  0044  080F               	movf	15,w	;volatile
   523  0045  398F               	andlw	-113
   524  0046  3850               	iorlw	80
   525  0047  008F               	movwf	15	;volatile
   526                           
   527                           ;./PICOSC.h: 33:     }
   528  0048  2886               	goto	l52
   529  0049                     l983:
   530  0049  3004               	movlw	4
   531  004A  0620               	xorwf	OSC_set@FreqClockSelect,w
   532  004B  1D03               	btfss	3,2
   533  004C  284E               	goto	u461
   534  004D  284F               	goto	u460
   535  004E                     u461:
   536  004E  2856               	goto	l987
   537  004F                     u460:
   538  004F                     l985:
   539                           
   540                           ;./PICOSC.h: 35:         OSCCONbits.IRCF = 4;
   541  004F  1683               	bsf	3,5	;RP0=1, select bank1
   542  0050  1303               	bcf	3,6	;RP1=0, select bank1
   543  0051  080F               	movf	15,w	;volatile
   544  0052  398F               	andlw	-113
   545  0053  3840               	iorlw	64
   546  0054  008F               	movwf	15	;volatile
   547                           
   548                           ;./PICOSC.h: 36:     }
   549  0055  2886               	goto	l52
   550  0056                     l987:
   551  0056  3003               	movlw	3
   552  0057  0620               	xorwf	OSC_set@FreqClockSelect,w
   553  0058  1D03               	btfss	3,2
   554  0059  285B               	goto	u471
   555  005A  285C               	goto	u470
   556  005B                     u471:
   557  005B  2863               	goto	l991
   558  005C                     u470:
   559  005C                     l989:
   560                           
   561                           ;./PICOSC.h: 38:         OSCCONbits.IRCF = 3;
   562  005C  1683               	bsf	3,5	;RP0=1, select bank1
   563  005D  1303               	bcf	3,6	;RP1=0, select bank1
   564  005E  080F               	movf	15,w	;volatile
   565  005F  398F               	andlw	-113
   566  0060  3830               	iorlw	48
   567  0061  008F               	movwf	15	;volatile
   568                           
   569                           ;./PICOSC.h: 39:     }
   570  0062  2886               	goto	l52
   571  0063                     l991:
   572  0063  3002               	movlw	2
   573  0064  0620               	xorwf	OSC_set@FreqClockSelect,w
   574  0065  1D03               	btfss	3,2
   575  0066  2868               	goto	u481
   576  0067  2869               	goto	u480
   577  0068                     u481:
   578  0068  2870               	goto	l995
   579  0069                     u480:
   580  0069                     l993:
   581                           
   582                           ;./PICOSC.h: 41:         OSCCONbits.IRCF = 2;
   583  0069  1683               	bsf	3,5	;RP0=1, select bank1
   584  006A  1303               	bcf	3,6	;RP1=0, select bank1
   585  006B  080F               	movf	15,w	;volatile
   586  006C  398F               	andlw	-113
   587  006D  3820               	iorlw	32
   588  006E  008F               	movwf	15	;volatile
   589                           
   590                           ;./PICOSC.h: 42:     }
   591  006F  2886               	goto	l52
   592  0070                     l995:
   593  0070  0320               	decf	OSC_set@FreqClockSelect,w
   594  0071  1D03               	btfss	3,2
   595  0072  2874               	goto	u491
   596  0073  2875               	goto	u490
   597  0074                     u491:
   598  0074  287C               	goto	l999
   599  0075                     u490:
   600  0075                     l997:
   601                           
   602                           ;./PICOSC.h: 44:         OSCCONbits.IRCF = 1;
   603  0075  1683               	bsf	3,5	;RP0=1, select bank1
   604  0076  1303               	bcf	3,6	;RP1=0, select bank1
   605  0077  080F               	movf	15,w	;volatile
   606  0078  398F               	andlw	-113
   607  0079  3810               	iorlw	16
   608  007A  008F               	movwf	15	;volatile
   609                           
   610                           ;./PICOSC.h: 45:     }
   611  007B  2886               	goto	l52
   612  007C                     l999:
   613  007C  0820               	movf	OSC_set@FreqClockSelect,w
   614  007D  1D03               	btfss	3,2
   615  007E  2880               	goto	u501
   616  007F  2881               	goto	u500
   617  0080                     u501:
   618  0080  2886               	goto	l60
   619  0081                     u500:
   620  0081                     l1001:
   621                           
   622                           ;./PICOSC.h: 47:         OSCCONbits.IRCF = 0;
   623  0081  308F               	movlw	-113
   624  0082  1683               	bsf	3,5	;RP0=1, select bank1
   625  0083  1303               	bcf	3,6	;RP1=0, select bank1
   626  0084  058F               	andwf	15,f	;volatile
   627  0085  2886               	goto	l52
   628  0086                     l60:
   629  0086                     l52:
   630                           
   631                           ;./PICOSC.h: 49:     if (InternalOsc == 1){
   632  0086  0374               	decf	OSC_set@InternalOsc,w
   633  0087  1D03               	btfss	3,2
   634  0088  288A               	goto	u511
   635  0089  288B               	goto	u510
   636  008A                     u511:
   637  008A  288F               	goto	l1005
   638  008B                     u510:
   639  008B                     l1003:
   640                           
   641                           ;./PICOSC.h: 50:         OSCCON |= (1<< 0x0);
   642  008B  1683               	bsf	3,5	;RP0=1, select bank1
   643  008C  1303               	bcf	3,6	;RP1=0, select bank1
   644  008D  140F               	bsf	15,0	;volatile
   645                           
   646                           ;./PICOSC.h: 51:     }
   647  008E  289A               	goto	l69
   648  008F                     l1005:
   649  008F  0874               	movf	OSC_set@InternalOsc,w
   650  0090  1D03               	btfss	3,2
   651  0091  2893               	goto	u521
   652  0092  2894               	goto	u520
   653  0093                     u521:
   654  0093  289A               	goto	l69
   655  0094                     u520:
   656  0094                     l1007:
   657                           
   658                           ;./PICOSC.h: 53:         OSCCON &= ~(1<< 0x0);
   659  0094  30FE               	movlw	254
   660  0095  00F5               	movwf	??_OSC_set
   661  0096  0875               	movf	??_OSC_set,w
   662  0097  1683               	bsf	3,5	;RP0=1, select bank1
   663  0098  1303               	bcf	3,6	;RP1=0, select bank1
   664  0099  058F               	andwf	15,f	;volatile
   665  009A                     l69:
   666  009A  0008               	return
   667  009B                     __end_of_OSC_set:
   668                           
   669                           	psect	text2
   670  015C                     __ptext2:	
   671 ;; *************** function _IO_set *****************
   672 ;; Defined at:
   673 ;;		line 57 in file "main.c"
   674 ;; Parameters:    Size  Location     Type
   675 ;;		None
   676 ;; Auto vars:     Size  Location     Type
   677 ;;		None
   678 ;; Return value:  Size  Location     Type
   679 ;;                  1    wreg      void 
   680 ;; Registers used:
   681 ;;		status,2
   682 ;; Tracked objects:
   683 ;;		On entry : 0/0
   684 ;;		On exit  : 0/0
   685 ;;		Unchanged: 0/0
   686 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   687 ;;      Params:         0       0       0       0       0
   688 ;;      Locals:         0       0       0       0       0
   689 ;;      Temps:          0       0       0       0       0
   690 ;;      Totals:         0       0       0       0       0
   691 ;;Total ram usage:        0 bytes
   692 ;; Hardware stack levels used: 1
   693 ;; Hardware stack levels required when called: 1
   694 ;; This function calls:
   695 ;;		Nothing
   696 ;; This function is called by:
   697 ;;		_main
   698 ;; This function uses a non-reentrant model
   699 ;;
   700                           
   701  015C                     _IO_set:	
   702                           ;psect for function _IO_set
   703                           
   704  015C                     l801:	
   705                           ;incstack = 0
   706                           ; Regs used in _IO_set: [status,2]
   707                           
   708                           
   709                           ;main.c: 58:     TRISB = 0;
   710  015C  1683               	bsf	3,5	;RP0=1, select bank1
   711  015D  1303               	bcf	3,6	;RP1=0, select bank1
   712  015E  0186               	clrf	6	;volatile
   713                           
   714                           ;main.c: 59:     PORTB = 0;
   715  015F  1283               	bcf	3,5	;RP0=0, select bank0
   716  0160  1303               	bcf	3,6	;RP1=0, select bank0
   717  0161  0186               	clrf	6	;volatile
   718  0162                     l129:
   719  0162  0008               	return
   720  0163                     __end_of_IO_set:
   721                           
   722                           	psect	text3
   723  010C                     __ptext3:	
   724 ;; *************** function _I2CPIC_Sset *****************
   725 ;; Defined at:
   726 ;;		line 31 in file "./I2Ccom.h"
   727 ;; Parameters:    Size  Location     Type
   728 ;;  IntEnable       2    0[BANK0 ] int 
   729 ;;  SlaveAdd        1    2[BANK0 ] unsigned char 
   730 ;;  addressSize     1    3[BANK0 ] unsigned char 
   731 ;;  StartStopInt    2    4[BANK0 ] int 
   732 ;; Auto vars:     Size  Location     Type
   733 ;;		None
   734 ;; Return value:  Size  Location     Type
   735 ;;                  1    wreg      void 
   736 ;; Registers used:
   737 ;;		wreg, status,2, status,0
   738 ;; Tracked objects:
   739 ;;		On entry : 0/0
   740 ;;		On exit  : 0/0
   741 ;;		Unchanged: 0/0
   742 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   743 ;;      Params:         0       6       0       0       0
   744 ;;      Locals:         0       0       0       0       0
   745 ;;      Temps:          1       0       0       0       0
   746 ;;      Totals:         1       6       0       0       0
   747 ;;Total ram usage:        7 bytes
   748 ;; Hardware stack levels used: 1
   749 ;; Hardware stack levels required when called: 1
   750 ;; This function calls:
   751 ;;		Nothing
   752 ;; This function is called by:
   753 ;;		_main
   754 ;; This function uses a non-reentrant model
   755 ;;
   756                           
   757  010C                     _I2CPIC_Sset:	
   758                           ;psect for function _I2CPIC_Sset
   759                           
   760  010C                     l1009:	
   761                           ;incstack = 0
   762                           ; Regs used in _I2CPIC_Sset: [wreg+status,2+status,0]
   763                           
   764                           
   765                           ;./I2Ccom.h: 32:     SSPSTAT = 0b10000000;
   766  010C  3080               	movlw	128
   767  010D  1683               	bsf	3,5	;RP0=1, select bank1
   768  010E  1303               	bcf	3,6	;RP1=0, select bank1
   769  010F  0094               	movwf	20	;volatile
   770  0110                     l1011:
   771                           
   772                           ;./I2Ccom.h: 33:     TRISC3 = 1;
   773  0110  1587               	bsf	7,3	;volatile
   774  0111                     l1013:
   775                           
   776                           ;./I2Ccom.h: 34:     TRISC4 = 1;
   777  0111  1607               	bsf	7,4	;volatile
   778                           
   779                           ;./I2Ccom.h: 35:     SSPADD = 0x26;
   780  0112  3026               	movlw	38
   781  0113  0093               	movwf	19	;volatile
   782                           
   783                           ;./I2Ccom.h: 36:     SSPCON = 0b00110110;
   784  0114  3036               	movlw	54
   785  0115  1283               	bcf	3,5	;RP0=0, select bank0
   786  0116  1303               	bcf	3,6	;RP1=0, select bank0
   787  0117  0094               	movwf	20	;volatile
   788  0118                     l1015:
   789                           
   790                           ;./I2Ccom.h: 37:     if(IntEnable == 0){
   791  0118  0820               	movf	I2CPIC_Sset@IntEnable,w
   792  0119  0421               	iorwf	I2CPIC_Sset@IntEnable+1,w
   793  011A  1D03               	btfss	3,2
   794  011B  291D               	goto	u531
   795  011C  291E               	goto	u530
   796  011D                     u531:
   797  011D  2925               	goto	l1019
   798  011E                     u530:
   799  011E                     l1017:
   800                           
   801                           ;./I2Ccom.h: 38:         PIE1 &= ~(1<<0x3);
   802  011E  30F7               	movlw	247
   803  011F  00F4               	movwf	??_I2CPIC_Sset
   804  0120  0874               	movf	??_I2CPIC_Sset,w
   805  0121  1683               	bsf	3,5	;RP0=1, select bank1
   806  0122  1303               	bcf	3,6	;RP1=0, select bank1
   807  0123  058C               	andwf	12,f	;volatile
   808                           
   809                           ;./I2Ccom.h: 39:     }
   810  0124  2935               	goto	l78
   811  0125                     l1019:
   812  0125  0320               	decf	I2CPIC_Sset@IntEnable,w
   813  0126  0421               	iorwf	I2CPIC_Sset@IntEnable+1,w
   814  0127  1D03               	btfss	3,2
   815  0128  292A               	goto	u541
   816  0129  292B               	goto	u540
   817  012A                     u541:
   818  012A  2935               	goto	l78
   819  012B                     u540:
   820  012B                     l1021:
   821                           
   822                           ;./I2Ccom.h: 41:         INTCON |= (1<<0x7)|(1<<0x6);
   823  012B  30C0               	movlw	192
   824  012C  00F4               	movwf	??_I2CPIC_Sset
   825  012D  0874               	movf	??_I2CPIC_Sset,w
   826  012E  048B               	iorwf	11,f	;volatile
   827  012F                     l1023:
   828                           
   829                           ;./I2Ccom.h: 42:         PIE1 |= (1<<0x3);
   830  012F  1683               	bsf	3,5	;RP0=1, select bank1
   831  0130  1303               	bcf	3,6	;RP1=0, select bank1
   832  0131  158C               	bsf	12,3	;volatile
   833  0132                     l1025:
   834                           
   835                           ;./I2Ccom.h: 43:         PIR1 |= (1<<0x3);
   836  0132  1283               	bcf	3,5	;RP0=0, select bank0
   837  0133  1303               	bcf	3,6	;RP1=0, select bank0
   838  0134  158C               	bsf	12,3	;volatile
   839  0135                     l78:
   840  0135  0008               	return
   841  0136                     __end_of_I2CPIC_Sset:
   842                           
   843                           	psect	text4
   844  009B                     __ptext4:	
   845 ;; *************** function _I2C_Slave_Read *****************
   846 ;; Defined at:
   847 ;;		line 62 in file "main.c"
   848 ;; Parameters:    Size  Location     Type
   849 ;;		None
   850 ;; Auto vars:     Size  Location     Type
   851 ;;		None
   852 ;; Return value:  Size  Location     Type
   853 ;;                  1    wreg      void 
   854 ;; Registers used:
   855 ;;		wreg, status,2, status,0
   856 ;; Tracked objects:
   857 ;;		On entry : 0/0
   858 ;;		On exit  : 0/0
   859 ;;		Unchanged: 0/0
   860 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   861 ;;      Params:         0       0       0       0       0
   862 ;;      Locals:         0       0       0       0       0
   863 ;;      Temps:          4       0       0       0       0
   864 ;;      Totals:         4       0       0       0       0
   865 ;;Total ram usage:        4 bytes
   866 ;; Hardware stack levels used: 1
   867 ;; This function calls:
   868 ;;		Nothing
   869 ;; This function is called by:
   870 ;;		Interrupt level 1
   871 ;; This function uses a non-reentrant model
   872 ;;
   873                           
   874  009B                     _I2C_Slave_Read:	
   875                           ;psect for function _I2C_Slave_Read
   876                           
   877  009B                     i1l873:
   878                           
   879                           ;main.c: 63:     if(PIR1 & 0b00001000){
   880  009B  1283               	bcf	3,5	;RP0=0, select bank0
   881  009C  1303               	bcf	3,6	;RP1=0, select bank0
   882  009D  1D8C               	btfss	12,3	;volatile
   883  009E  28A0               	goto	u21_21
   884  009F  28A1               	goto	u21_20
   885  00A0                     u21_21:
   886  00A0  2905               	goto	i1l149
   887  00A1                     u21_20:
   888  00A1                     i1l875:
   889                           
   890                           ;main.c: 65:         if ((SSPCONbits.SSPOV) || (SSPCONbits.WCOL)){
   891  00A1  1B14               	btfsc	20,6	;volatile
   892  00A2  28A4               	goto	u22_21
   893  00A3  28A5               	goto	u22_20
   894  00A4                     u22_21:
   895  00A4  28A9               	goto	i1l879
   896  00A5                     u22_20:
   897  00A5                     i1l877:
   898  00A5  1F94               	btfss	20,7	;volatile
   899  00A6  28A8               	goto	u23_21
   900  00A7  28A9               	goto	u23_20
   901  00A8                     u23_21:
   902  00A8  28B9               	goto	i1l887
   903  00A9                     u23_20:
   904  00A9                     i1l879:
   905                           
   906                           ;main.c: 66:             z = SSPBUF;
   907  00A9  0813               	movf	19,w	;volatile
   908  00AA  00F0               	movwf	??_I2C_Slave_Read
   909  00AB  01F1               	clrf	??_I2C_Slave_Read+1
   910  00AC  0870               	movf	??_I2C_Slave_Read,w
   911  00AD  00F6               	movwf	_z
   912  00AE  0871               	movf	??_I2C_Slave_Read+1,w
   913  00AF  00F7               	movwf	_z+1
   914  00B0                     i1l881:
   915                           
   916                           ;main.c: 67:             SSPCON &= ~(1<<0x7)&~(1<<0x6);
   917  00B0  303F               	movlw	63
   918  00B1  00F0               	movwf	??_I2C_Slave_Read
   919  00B2  0870               	movf	??_I2C_Slave_Read,w
   920  00B3  0594               	andwf	20,f	;volatile
   921  00B4                     i1l883:
   922                           
   923                           ;main.c: 68:             SSPCONbits.CKP = 1;
   924  00B4  1614               	bsf	20,4	;volatile
   925  00B5                     i1l885:
   926                           
   927                           ;main.c: 69:             rData = SSPBUF;
   928  00B5  0813               	movf	19,w	;volatile
   929  00B6  00F0               	movwf	??_I2C_Slave_Read
   930  00B7  0870               	movf	??_I2C_Slave_Read,w
   931  00B8  00F8               	movwf	_rData
   932  00B9                     i1l887:
   933                           
   934                           ;main.c: 71:         if(!SSPSTATbits.D_nA && !SSPSTATbits.R_nW){
   935  00B9  1683               	bsf	3,5	;RP0=1, select bank1
   936  00BA  1303               	bcf	3,6	;RP1=0, select bank1
   937  00BB  1A94               	btfsc	20,5	;volatile
   938  00BC  28BE               	goto	u24_21
   939  00BD  28BF               	goto	u24_20
   940  00BE                     u24_21:
   941  00BE  28DA               	goto	i1l138
   942  00BF                     u24_20:
   943  00BF                     i1l889:
   944  00BF  1914               	btfsc	20,2	;volatile
   945  00C0  28C2               	goto	u25_21
   946  00C1  28C3               	goto	u25_20
   947  00C2                     u25_21:
   948  00C2  28DA               	goto	i1l138
   949  00C3                     u25_20:
   950  00C3                     i1l891:
   951                           
   952                           ;main.c: 72:             z = SSPBUF;
   953  00C3  1283               	bcf	3,5	;RP0=0, select bank0
   954  00C4  1303               	bcf	3,6	;RP1=0, select bank0
   955  00C5  0813               	movf	19,w	;volatile
   956  00C6  00F0               	movwf	??_I2C_Slave_Read
   957  00C7  01F1               	clrf	??_I2C_Slave_Read+1
   958  00C8  0870               	movf	??_I2C_Slave_Read,w
   959  00C9  00F6               	movwf	_z
   960  00CA  0871               	movf	??_I2C_Slave_Read+1,w
   961  00CB  00F7               	movwf	_z+1
   962  00CC                     i1l139:	
   963                           ;main.c: 73:             while(!BF);
   964                           
   965  00CC  1683               	bsf	3,5	;RP0=1, select bank1
   966  00CD  1303               	bcf	3,6	;RP1=0, select bank1
   967  00CE  1C14               	btfss	20,0	;volatile
   968  00CF  28D1               	goto	u26_21
   969  00D0  28D2               	goto	u26_20
   970  00D1                     u26_21:
   971  00D1  28CC               	goto	i1l139
   972  00D2                     u26_20:
   973  00D2                     i1l893:
   974                           
   975                           ;main.c: 74:             rData = SSPBUF;
   976  00D2  1283               	bcf	3,5	;RP0=0, select bank0
   977  00D3  1303               	bcf	3,6	;RP1=0, select bank0
   978  00D4  0813               	movf	19,w	;volatile
   979  00D5  00F0               	movwf	??_I2C_Slave_Read
   980  00D6  0870               	movf	??_I2C_Slave_Read,w
   981  00D7  00F8               	movwf	_rData
   982  00D8                     i1l895:
   983                           
   984                           ;main.c: 75:             SSPCONbits.CKP = 1;
   985  00D8  1614               	bsf	20,4	;volatile
   986                           
   987                           ;main.c: 76:         }
   988  00D9  28F9               	goto	i1l905
   989  00DA                     i1l138:	
   990                           ;main.c: 77:         else if(!SSPSTATbits.D_nA && SSPSTATbits.R_nW){
   991                           
   992  00DA  1A94               	btfsc	20,5	;volatile
   993  00DB  28DD               	goto	u27_21
   994  00DC  28DE               	goto	u27_20
   995  00DD                     u27_21:
   996  00DD  28F9               	goto	i1l905
   997  00DE                     u27_20:
   998  00DE                     i1l897:
   999  00DE  1D14               	btfss	20,2	;volatile
  1000  00DF  28E1               	goto	u28_21
  1001  00E0  28E2               	goto	u28_20
  1002  00E1                     u28_21:
  1003  00E1  28F9               	goto	i1l905
  1004  00E2                     u28_20:
  1005  00E2                     i1l899:
  1006                           
  1007                           ;main.c: 78:             z = SSPBUF;
  1008  00E2  1283               	bcf	3,5	;RP0=0, select bank0
  1009  00E3  1303               	bcf	3,6	;RP1=0, select bank0
  1010  00E4  0813               	movf	19,w	;volatile
  1011  00E5  00F0               	movwf	??_I2C_Slave_Read
  1012  00E6  01F1               	clrf	??_I2C_Slave_Read+1
  1013  00E7  0870               	movf	??_I2C_Slave_Read,w
  1014  00E8  00F6               	movwf	_z
  1015  00E9  0871               	movf	??_I2C_Slave_Read+1,w
  1016  00EA  00F7               	movwf	_z+1
  1017  00EB                     i1l901:
  1018                           
  1019                           ;main.c: 79:             BF = 0;
  1020  00EB  1683               	bsf	3,5	;RP0=1, select bank1
  1021  00EC  1303               	bcf	3,6	;RP1=0, select bank1
  1022  00ED  1014               	bcf	20,0	;volatile
  1023                           
  1024                           ;main.c: 80:             SSPBUF = tData;
  1025  00EE  0879               	movf	_tData,w
  1026  00EF  1283               	bcf	3,5	;RP0=0, select bank0
  1027  00F0  1303               	bcf	3,6	;RP1=0, select bank0
  1028  00F1  0093               	movwf	19	;volatile
  1029  00F2                     i1l903:
  1030                           
  1031                           ;main.c: 81:             SSPCONbits.CKP = 1;
  1032  00F2  1614               	bsf	20,4	;volatile
  1033  00F3                     i1l144:	
  1034                           ;main.c: 82:             while(SSPSTATbits.BF);
  1035                           
  1036  00F3  1683               	bsf	3,5	;RP0=1, select bank1
  1037  00F4  1303               	bcf	3,6	;RP1=0, select bank1
  1038  00F5  1814               	btfsc	20,0	;volatile
  1039  00F6  28F8               	goto	u29_21
  1040  00F7  28F9               	goto	u29_20
  1041  00F8                     u29_21:
  1042  00F8  28F3               	goto	i1l144
  1043  00F9                     u29_20:
  1044  00F9                     i1l905:
  1045                           
  1046                           ;main.c: 84:         if(rData == 0b10101010){
  1047  00F9  30AA               	movlw	170
  1048  00FA  0678               	xorwf	_rData,w
  1049  00FB  1D03               	btfss	3,2
  1050  00FC  28FE               	goto	u30_21
  1051  00FD  28FF               	goto	u30_20
  1052  00FE                     u30_21:
  1053  00FE  2902               	goto	i1l147
  1054  00FF                     u30_20:
  1055  00FF                     i1l907:
  1056                           
  1057                           ;main.c: 85:             PORTBbits.RB6 = 0;
  1058  00FF  1283               	bcf	3,5	;RP0=0, select bank0
  1059  0100  1306               	bcf	6,6	;volatile
  1060                           
  1061                           ;main.c: 86:         }
  1062  0101  2904               	goto	i1l148
  1063  0102                     i1l147:	
  1064                           ;main.c: 87:         else{
  1065                           
  1066                           
  1067                           ;main.c: 88:             PORTBbits.RB6 = 1;
  1068  0102  1283               	bcf	3,5	;RP0=0, select bank0
  1069  0103  1706               	bsf	6,6	;volatile
  1070  0104                     i1l148:	
  1071                           ;main.c: 89:         }
  1072                           
  1073                           
  1074                           ;main.c: 90:         SSPIF = 0;
  1075  0104  118C               	bcf	12,3	;volatile
  1076  0105                     i1l149:
  1077  0105  0873               	movf	??_I2C_Slave_Read+3,w
  1078  0106  008A               	movwf	10
  1079  0107  0E72               	swapf	??_I2C_Slave_Read+2,w
  1080  0108  0083               	movwf	3
  1081  0109  0EFE               	swapf	btemp,f
  1082  010A  0E7E               	swapf	btemp,w
  1083  010B  0009               	retfie
  1084  010C                     __end_of_I2C_Slave_Read:
  1085  007E                     btemp	set	126	;btemp
  1086  007E                     wtemp0	set	126
  1087                           
  1088                           	psect	intentry
  1089  0004                     __pintentry:	
  1090                           ;incstack = 0
  1091                           ; Regs used in _I2C_Slave_Read: [wreg+status,2+status,0]
  1092                           
  1093  0004                     interrupt_function:
  1094  007E                     saved_w	set	btemp
  1095  0004  00FE               	movwf	btemp
  1096  0005  0E03               	swapf	3,w
  1097  0006  00F2               	movwf	??_I2C_Slave_Read+2
  1098  0007  080A               	movf	10,w
  1099  0008  00F3               	movwf	??_I2C_Slave_Read+3
  1100  0009  120A  118A  289B   	ljmp	_I2C_Slave_Read
  1101                           
  1102                           	psect	idloc
  1103                           
  1104                           ;Config register IDLOC0 @ 0x2000
  1105                           ;	unspecified, using default values
  1106  2000                     	org	8192
  1107  2000  3FFF               	dw	16383
  1108                           
  1109                           ;Config register IDLOC1 @ 0x2001
  1110                           ;	unspecified, using default values
  1111  2001                     	org	8193
  1112  2001  3FFF               	dw	16383
  1113                           
  1114                           ;Config register IDLOC2 @ 0x2002
  1115                           ;	unspecified, using default values
  1116  2002                     	org	8194
  1117  2002  3FFF               	dw	16383
  1118                           
  1119                           ;Config register IDLOC3 @ 0x2003
  1120                           ;	unspecified, using default values
  1121  2003                     	org	8195
  1122  2003  3FFF               	dw	16383
  1123                           
  1124                           	psect	config
  1125                           
  1126                           ;Config register CONFIG1 @ 0x2007
  1127                           ;	Oscillator Selection bits
  1128                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1129                           ;	Watchdog Timer Enable bit
  1130                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1131                           ;	Power-up Timer Enable bit
  1132                           ;	PWRTE = OFF, PWRT disabled
  1133                           ;	RE3/MCLR pin function select bit
  1134                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1135                           ;	Code Protection bit
  1136                           ;	CP = OFF, Program memory code protection is disabled
  1137                           ;	Data Code Protection bit
  1138                           ;	CPD = OFF, Data memory code protection is disabled
  1139                           ;	Brown Out Reset Selection bits
  1140                           ;	BOREN = OFF, BOR disabled
  1141                           ;	Internal External Switchover bit
  1142                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1143                           ;	Fail-Safe Clock Monitor Enabled bit
  1144                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1145                           ;	Low Voltage Programming Enable bit
  1146                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1147                           ;	In-Circuit Debugger Mode bit
  1148                           ;	DEBUG = 0x1, unprogrammed default
  1149  2007                     	org	8199
  1150  2007  20D4               	dw	8404
  1151                           
  1152                           ;Config register CONFIG2 @ 0x2008
  1153                           ;	Brown-out Reset Selection bit
  1154                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1155                           ;	Flash Program Memory Self Write Enable bits
  1156                           ;	WRT = OFF, Write protection off
  1157  2008                     	org	8200
  1158  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      10
    BANK0            80      8       8
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_OSC_set

Critical Paths under _I2C_Slave_Read in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_I2CPIC_Sset

Critical Paths under _I2C_Slave_Read in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _I2C_Slave_Read in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _I2C_Slave_Read in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _I2C_Slave_Read in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     822
                                              6 BANK0      2     2      0
                        _I2CPIC_Sset
                             _IO_set
                            _OSC_set
 ---------------------------------------------------------------------------------
 (1) _OSC_set                                              3     2      1     400
                                              4 COMMON     2     1      1
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _IO_set                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2CPIC_Sset                                          7     1      6     422
                                              4 COMMON     1     1      0
                                              0 BANK0      6     0      6
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _I2C_Slave_Read                                       4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2CPIC_Sset
   _IO_set
   _OSC_set

 _I2C_Slave_Read (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      8       8       5       10.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      6       A       1       71.4%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      12      12        0.0%
ABS                  0      0      12       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Thu Mar 02 15:40:55 2023

                      _z 0076              _SSPSTATbits 0094                       _BF 04A0  
                     l60 0086                       l52 0086                       l69 009A  
                     l78 0135                      l123 0158                      l124 0158  
                    l129 0162                      l801 015C                      l971 0024  
                    l981 0042                      l973 002A                      l991 0063  
                    l983 0049                      l975 002F                      l993 0069  
                    l985 004F                      l977 0035                      l995 0070  
                    l987 0056                      l979 003C                      l997 0075  
                    l989 005C                      l999 007C                      u500 0081  
                    u501 0080                      u510 008B                      u430 002A  
                    u511 008A                      u431 0029                      u520 0094  
                    u440 0035                      u521 0093                      u441 0034  
                    u530 011E                      u450 0042                      u531 011D  
                    u451 0041                      u540 012B                      u460 004F  
                    u541 012A                      u461 004E                      u470 005C  
                    u471 005B                      u480 0069                      u481 0068  
                    u490 0075                      u491 0074                     l1001 0081  
                   l1011 0110                     l1003 008B                     l1021 012B  
                   l1013 0111                     l1005 008F                     l1023 012F  
                   l1015 0118                     l1007 0094                     l1031 0142  
                   l1025 0132                     l1017 011E                     l1009 010C  
                   l1019 0125                     l1027 0136                     l1029 013D  
                   _PIE1 008C                     _PIR1 000C                     _main 0136  
        __end_of_OSC_set 009B                     btemp 007E                     start 000C  
                  ?_main 0070                    i1l144 00F3                    i1l138 00DA  
                  i1l147 0102                    i1l139 00CC                    i1l148 0104  
                  i1l149 0105                    i1l901 00EB                    i1l903 00F2  
                  i1l905 00F9                    i1l907 00FF                    i1l881 00B0  
                  i1l873 009B                    i1l891 00C3                    i1l883 00B4  
                  i1l875 00A1                    i1l893 00D2                    i1l885 00B5  
                  i1l877 00A5                    i1l895 00D8                    i1l887 00B9  
                  i1l879 00A9                    i1l897 00DE                    i1l889 00BF  
                  i1l899 00E2                    u21_20 00A1                    u21_21 00A0  
                  u30_20 00FF                    u22_20 00A5                    u30_21 00FE  
                  u22_21 00A4                    u23_20 00A9                    u23_21 00A8  
                  u24_20 00BF                    u24_21 00BE                    u25_20 00C3  
                  u25_21 00C2                    u26_20 00D2                    u26_21 00D1  
                  u27_20 00DE                    u27_21 00DD                    _PORTA 0005  
                  _PORTB 0006                    u28_20 00E2                    u28_21 00E1  
                  u29_20 00F9                    u29_21 00F8                    _TRISB 0086  
                  _TRISC 0087                    _SSPIF 0063                    _rData 0078  
                  _tData 0079                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 000F             __end_of_main 015C  
                 ??_main 0026   OSC_set@FreqClockSelect 0020                ??_OSC_set 0075  
     OSC_set@InternalOsc 0074  I2CPIC_Sset@StartStopInt 0024                   _INTCON 000B  
                 _OSCCON 008F                   _SSPADD 0093                   _TRISC3 043B  
                 _TRISC4 043C                   _SSPCON 0014                   _SSPBUF 0013  
                 _IO_set 015C   I2CPIC_Sset@addressSize 0023     I2CPIC_Sset@IntEnable 0020  
           __pdataCOMMON 0078                   saved_w 007E  __end_of__initialization 001D  
         __pcstackCOMMON 0070            ??_I2CPIC_Sset 0074                  ?_IO_set 0070  
             __pmaintext 0136               __pintentry 0004                  _SSPCON2 0091  
                _OSC_set 0021      __end_of_I2CPIC_Sset 0136                  _SSPSTAT 0094  
                __ptext1 0021                  __ptext2 015C                  __ptext3 010C  
                __ptext4 009B     end_of_initialization 001D           _I2C_Slave_Read 009B  
              _PORTBbits 0006              _I2CPIC_Sset 010C           __end_of_IO_set 0163  
 __end_of_I2C_Slave_Read 010C            __pidataCOMMON 0163      start_initialization 000F  
               ??_IO_set 0074          ?_I2C_Slave_Read 0070      I2CPIC_Sset@SlaveAdd 0022  
            __pbssCOMMON 0076                ___latbits 0002            __pcstackBANK0 0020  
               ?_OSC_set 0074        interrupt_function 0004                 _PIE1bits 008C  
               _PIR1bits 000C             ?_I2CPIC_Sset 0020         ??_I2C_Slave_Read 0070  
               intlevel1 0000               _OSCCONbits 008F               _SSPCONbits 0014  
